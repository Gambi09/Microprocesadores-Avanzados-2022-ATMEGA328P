
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  000002c6  0000035a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080011e  0080011e  00000378  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c78  00000000  00000000  00000430  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007a5  00000000  00000000  000010a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000461  00000000  00000000  0000184d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000090  00000000  00000000  00001cb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f2  00000000  00000000  00001d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004f1  00000000  00000000  00002132  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002623  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ec       	ldi	r30, 0xC6	; 198
  7c:	f2 e0       	ldi	r31, 0x02	; 2
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 31       	cpi	r26, 0x1E	; 30
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e1       	ldi	r26, 0x1E	; 30
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 32       	cpi	r26, 0x20	; 32
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <main>
  9e:	0c 94 61 01 	jmp	0x2c2	; 0x2c2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <LCD_Action>:
	if (row == 0 && pos<16)
	LCD_Action((pos & 0x0F)|0x80);
	else if (row == 1 && pos<16)
	LCD_Action((pos & 0x0F)|0xC0);
	LCD_Print(str);
}
  a6:	9b b1       	in	r25, 0x0b	; 11
  a8:	9f 70       	andi	r25, 0x0F	; 15
  aa:	28 2f       	mov	r18, r24
  ac:	20 7f       	andi	r18, 0xF0	; 240
  ae:	92 2b       	or	r25, r18
  b0:	9b b9       	out	0x0b, r25	; 11
  b2:	9b b1       	in	r25, 0x0b	; 11
  b4:	9e 7f       	andi	r25, 0xFE	; 254
  b6:	9b b9       	out	0x0b, r25	; 11
  b8:	9b b1       	in	r25, 0x0b	; 11
  ba:	92 60       	ori	r25, 0x02	; 2
  bc:	9b b9       	out	0x0b, r25	; 11
  be:	35 e0       	ldi	r19, 0x05	; 5
  c0:	3a 95       	dec	r19
  c2:	f1 f7       	brne	.-4      	; 0xc0 <LCD_Action+0x1a>
  c4:	00 00       	nop
  c6:	9b b1       	in	r25, 0x0b	; 11
  c8:	9d 7f       	andi	r25, 0xFD	; 253
  ca:	9b b9       	out	0x0b, r25	; 11
  cc:	ef e1       	ldi	r30, 0x1F	; 31
  ce:	f3 e0       	ldi	r31, 0x03	; 3
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <LCD_Action+0x2a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <LCD_Action+0x30>
  d6:	00 00       	nop
  d8:	2b b1       	in	r18, 0x0b	; 11
  da:	f0 e1       	ldi	r31, 0x10	; 16
  dc:	8f 9f       	mul	r24, r31
  de:	c0 01       	movw	r24, r0
  e0:	11 24       	eor	r1, r1
  e2:	92 2f       	mov	r25, r18
  e4:	9f 70       	andi	r25, 0x0F	; 15
  e6:	89 2b       	or	r24, r25
  e8:	8b b9       	out	0x0b, r24	; 11
  ea:	8b b1       	in	r24, 0x0b	; 11
  ec:	82 60       	ori	r24, 0x02	; 2
  ee:	8b b9       	out	0x0b, r24	; 11
  f0:	35 e0       	ldi	r19, 0x05	; 5
  f2:	3a 95       	dec	r19
  f4:	f1 f7       	brne	.-4      	; 0xf2 <LCD_Action+0x4c>
  f6:	00 00       	nop
  f8:	8b b1       	in	r24, 0x0b	; 11
  fa:	8d 7f       	andi	r24, 0xFD	; 253
  fc:	8b b9       	out	0x0b, r24	; 11
  fe:	8f e3       	ldi	r24, 0x3F	; 63
 100:	9f e1       	ldi	r25, 0x1F	; 31
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Action+0x5c>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Action+0x62>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <LCD_Init>:
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	8a b9       	out	0x0a, r24	; 10
 110:	8f e5       	ldi	r24, 0x5F	; 95
 112:	9a ee       	ldi	r25, 0xEA	; 234
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <LCD_Init+0x8>
 118:	00 c0       	rjmp	.+0      	; 0x11a <LCD_Init+0xe>
 11a:	00 00       	nop
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 124:	88 e2       	ldi	r24, 0x28	; 40
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 12c:	8c e0       	ldi	r24, 0x0C	; 12
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 134:	86 e0       	ldi	r24, 0x06	; 6
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
 144:	8f e3       	ldi	r24, 0x3F	; 63
 146:	9f e1       	ldi	r25, 0x1F	; 31
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <LCD_Init+0x3c>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <LCD_Init+0x42>
 14e:	00 00       	nop
 150:	08 95       	ret

00000152 <LCD_Print>:
 152:	fc 01       	movw	r30, r24
 154:	60 e0       	ldi	r22, 0x00	; 0
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	34 c0       	rjmp	.+104    	; 0x1c2 <LCD_Print+0x70>
 15a:	8b b1       	in	r24, 0x0b	; 11
 15c:	8f 70       	andi	r24, 0x0F	; 15
 15e:	90 7f       	andi	r25, 0xF0	; 240
 160:	98 2b       	or	r25, r24
 162:	9b b9       	out	0x0b, r25	; 11
 164:	8b b1       	in	r24, 0x0b	; 11
 166:	81 60       	ori	r24, 0x01	; 1
 168:	8b b9       	out	0x0b, r24	; 11
 16a:	8b b1       	in	r24, 0x0b	; 11
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	8b b9       	out	0x0b, r24	; 11
 170:	85 e0       	ldi	r24, 0x05	; 5
 172:	8a 95       	dec	r24
 174:	f1 f7       	brne	.-4      	; 0x172 <LCD_Print+0x20>
 176:	00 00       	nop
 178:	8b b1       	in	r24, 0x0b	; 11
 17a:	8d 7f       	andi	r24, 0xFD	; 253
 17c:	8b b9       	out	0x0b, r24	; 11
 17e:	8f e1       	ldi	r24, 0x1F	; 31
 180:	93 e0       	ldi	r25, 0x03	; 3
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <LCD_Print+0x30>
 186:	00 c0       	rjmp	.+0      	; 0x188 <LCD_Print+0x36>
 188:	00 00       	nop
 18a:	4b b1       	in	r20, 0x0b	; 11
 18c:	9c 91       	ld	r25, X
 18e:	80 e1       	ldi	r24, 0x10	; 16
 190:	98 9f       	mul	r25, r24
 192:	90 01       	movw	r18, r0
 194:	11 24       	eor	r1, r1
 196:	94 2f       	mov	r25, r20
 198:	9f 70       	andi	r25, 0x0F	; 15
 19a:	29 2b       	or	r18, r25
 19c:	2b b9       	out	0x0b, r18	; 11
 19e:	9b b1       	in	r25, 0x0b	; 11
 1a0:	92 60       	ori	r25, 0x02	; 2
 1a2:	9b b9       	out	0x0b, r25	; 11
 1a4:	95 e0       	ldi	r25, 0x05	; 5
 1a6:	9a 95       	dec	r25
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_Print+0x54>
 1aa:	00 00       	nop
 1ac:	9b b1       	in	r25, 0x0b	; 11
 1ae:	9d 7f       	andi	r25, 0xFD	; 253
 1b0:	9b b9       	out	0x0b, r25	; 11
 1b2:	8f e3       	ldi	r24, 0x3F	; 63
 1b4:	9f e1       	ldi	r25, 0x1F	; 31
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_Print+0x64>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_Print+0x6a>
 1bc:	00 00       	nop
 1be:	6f 5f       	subi	r22, 0xFF	; 255
 1c0:	7f 4f       	sbci	r23, 0xFF	; 255
 1c2:	df 01       	movw	r26, r30
 1c4:	a6 0f       	add	r26, r22
 1c6:	b7 1f       	adc	r27, r23
 1c8:	9c 91       	ld	r25, X
 1ca:	91 11       	cpse	r25, r1
 1cc:	c6 cf       	rjmp	.-116    	; 0x15a <LCD_Print+0x8>
 1ce:	08 95       	ret

000001d0 <main>:

int main()
{
 1d0:	cf 93       	push	r28
 1d2:	df 93       	push	r29
 1d4:	cd b7       	in	r28, 0x3d	; 61
 1d6:	de b7       	in	r29, 0x3e	; 62
 1d8:	60 97       	sbiw	r28, 0x10	; 16
 1da:	0f b6       	in	r0, 0x3f	; 63
 1dc:	f8 94       	cli
 1de:	de bf       	out	0x3e, r29	; 62
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	cd bf       	out	0x3d, r28	; 61
	LCD_Init(); //Activate LCD
 1e4:	0e 94 86 00 	call	0x10c	; 0x10c <LCD_Init>
	LCD_Print("WWW.AEQ-WEB.COM");	//Begin writing at Line 1, Position 1
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	0e 94 a9 00 	call	0x152	; 0x152 <LCD_Print>

	while(1) {
		char showruntime [16];
		itoa (runtime,showruntime,10);
 1f0:	4a e0       	ldi	r20, 0x0A	; 10
 1f2:	50 e0       	ldi	r21, 0x00	; 0
 1f4:	be 01       	movw	r22, r28
 1f6:	6f 5f       	subi	r22, 0xFF	; 255
 1f8:	7f 4f       	sbci	r23, 0xFF	; 255
 1fa:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 1fe:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
 202:	0e 94 21 01 	call	0x242	; 0x242 <itoa>
		LCD_Action(0xC0);		//Go to Line 2, Position 1
 206:	80 ec       	ldi	r24, 0xC0	; 192
 208:	0e 94 53 00 	call	0xa6	; 0xa6 <LCD_Action>
		LCD_Print("RUNTIME (s): ");
 20c:	80 e1       	ldi	r24, 0x10	; 16
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	0e 94 a9 00 	call	0x152	; 0x152 <LCD_Print>
		LCD_Print(showruntime);
 214:	ce 01       	movw	r24, r28
 216:	01 96       	adiw	r24, 0x01	; 1
 218:	0e 94 a9 00 	call	0x152	; 0x152 <LCD_Print>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21c:	2f ef       	ldi	r18, 0xFF	; 255
 21e:	83 ed       	ldi	r24, 0xD3	; 211
 220:	90 e3       	ldi	r25, 0x30	; 48
 222:	21 50       	subi	r18, 0x01	; 1
 224:	80 40       	sbci	r24, 0x00	; 0
 226:	90 40       	sbci	r25, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0x52>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x5c>
 22c:	00 00       	nop
		_delay_ms(1000);
		runtime++;
 22e:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <__data_end>
 232:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <__data_end+0x1>
 236:	01 96       	adiw	r24, 0x01	; 1
 238:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__data_end+0x1>
 23c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__data_end>
 240:	d7 cf       	rjmp	.-82     	; 0x1f0 <main+0x20>

00000242 <itoa>:
 242:	45 32       	cpi	r20, 0x25	; 37
 244:	51 05       	cpc	r21, r1
 246:	20 f4       	brcc	.+8      	; 0x250 <itoa+0xe>
 248:	42 30       	cpi	r20, 0x02	; 2
 24a:	10 f0       	brcs	.+4      	; 0x250 <itoa+0xe>
 24c:	0c 94 2c 01 	jmp	0x258	; 0x258 <__itoa_ncheck>
 250:	fb 01       	movw	r30, r22
 252:	10 82       	st	Z, r1
 254:	cb 01       	movw	r24, r22
 256:	08 95       	ret

00000258 <__itoa_ncheck>:
 258:	bb 27       	eor	r27, r27
 25a:	4a 30       	cpi	r20, 0x0A	; 10
 25c:	31 f4       	brne	.+12     	; 0x26a <__itoa_ncheck+0x12>
 25e:	99 23       	and	r25, r25
 260:	22 f4       	brpl	.+8      	; 0x26a <__itoa_ncheck+0x12>
 262:	bd e2       	ldi	r27, 0x2D	; 45
 264:	90 95       	com	r25
 266:	81 95       	neg	r24
 268:	9f 4f       	sbci	r25, 0xFF	; 255
 26a:	0c 94 38 01 	jmp	0x270	; 0x270 <__utoa_common>

0000026e <__utoa_ncheck>:
 26e:	bb 27       	eor	r27, r27

00000270 <__utoa_common>:
 270:	fb 01       	movw	r30, r22
 272:	55 27       	eor	r21, r21
 274:	aa 27       	eor	r26, r26
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	aa 1f       	adc	r26, r26
 27c:	a4 17       	cp	r26, r20
 27e:	10 f0       	brcs	.+4      	; 0x284 <__utoa_common+0x14>
 280:	a4 1b       	sub	r26, r20
 282:	83 95       	inc	r24
 284:	50 51       	subi	r21, 0x10	; 16
 286:	b9 f7       	brne	.-18     	; 0x276 <__utoa_common+0x6>
 288:	a0 5d       	subi	r26, 0xD0	; 208
 28a:	aa 33       	cpi	r26, 0x3A	; 58
 28c:	08 f0       	brcs	.+2      	; 0x290 <__utoa_common+0x20>
 28e:	a9 5d       	subi	r26, 0xD9	; 217
 290:	a1 93       	st	Z+, r26
 292:	00 97       	sbiw	r24, 0x00	; 0
 294:	79 f7       	brne	.-34     	; 0x274 <__utoa_common+0x4>
 296:	b1 11       	cpse	r27, r1
 298:	b1 93       	st	Z+, r27
 29a:	11 92       	st	Z+, r1
 29c:	cb 01       	movw	r24, r22
 29e:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <strrev>

000002a2 <strrev>:
 2a2:	dc 01       	movw	r26, r24
 2a4:	fc 01       	movw	r30, r24
 2a6:	67 2f       	mov	r22, r23
 2a8:	71 91       	ld	r23, Z+
 2aa:	77 23       	and	r23, r23
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <strrev+0x4>
 2ae:	32 97       	sbiw	r30, 0x02	; 2
 2b0:	04 c0       	rjmp	.+8      	; 0x2ba <strrev+0x18>
 2b2:	7c 91       	ld	r23, X
 2b4:	6d 93       	st	X+, r22
 2b6:	70 83       	st	Z, r23
 2b8:	62 91       	ld	r22, -Z
 2ba:	ae 17       	cp	r26, r30
 2bc:	bf 07       	cpc	r27, r31
 2be:	c8 f3       	brcs	.-14     	; 0x2b2 <strrev+0x10>
 2c0:	08 95       	ret

000002c2 <_exit>:
 2c2:	f8 94       	cli

000002c4 <__stop_program>:
 2c4:	ff cf       	rjmp	.-2      	; 0x2c4 <__stop_program>
