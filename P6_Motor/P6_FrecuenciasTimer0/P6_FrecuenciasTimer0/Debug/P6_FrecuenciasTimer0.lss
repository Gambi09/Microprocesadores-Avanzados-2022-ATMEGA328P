
P6_FrecuenciasTimer0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003c  00800100  000003ea  0000047e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  0080013c  0080013c  000004ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001289  00000000  00000000  000005ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007f2  00000000  00000000  00001875  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000759  00000000  00000000  00002067  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  000027c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050e  00000000  00000000  00002960  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000884  00000000  00000000  00002e6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  000036f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ee       	ldi	r30, 0xEA	; 234
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 33       	cpi	r26, 0x3C	; 60
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e3       	ldi	r26, 0x3C	; 60
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 35       	cpi	r26, 0x52	; 82
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 6d 01 	call	0x2da	; 0x2da <main>
  9e:	0c 94 f3 01 	jmp	0x3e6	; 0x3e6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ENVIA_CMD>:
	ENVIA_CMD(0x40+(Location*8));
	
	for (i=0; i<8; i++){
	ENVIA_DATO(Pattern[i]);	
	}
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	96 95       	lsr	r25
  ac:	96 95       	lsr	r25
  ae:	98 b9       	out	0x08, r25	; 8
  b0:	98 b1       	in	r25, 0x08	; 8
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	98 b9       	out	0x08, r25	; 8
  b6:	98 b1       	in	r25, 0x08	; 8
  b8:	92 60       	ori	r25, 0x02	; 2
  ba:	98 b9       	out	0x08, r25	; 8
  bc:	ef e9       	ldi	r30, 0x9F	; 159
  be:	ff e0       	ldi	r31, 0x0F	; 15
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <ENVIA_CMD+0x1a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <ENVIA_CMD+0x20>
  c6:	00 00       	nop
  c8:	98 b1       	in	r25, 0x08	; 8
  ca:	9d 7f       	andi	r25, 0xFD	; 253
  cc:	98 b9       	out	0x08, r25	; 8
  ce:	ef e3       	ldi	r30, 0x3F	; 63
  d0:	fc e9       	ldi	r31, 0x9C	; 156
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <ENVIA_CMD+0x2c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <ENVIA_CMD+0x32>
  d8:	00 00       	nop
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	8c 73       	andi	r24, 0x3C	; 60
  e6:	88 b9       	out	0x08, r24	; 8
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	88 b9       	out	0x08, r24	; 8
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	88 b9       	out	0x08, r24	; 8
  f4:	8f e9       	ldi	r24, 0x9F	; 159
  f6:	9f e0       	ldi	r25, 0x0F	; 15
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <ENVIA_CMD+0x52>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <ENVIA_CMD+0x58>
  fe:	00 00       	nop
 100:	88 b1       	in	r24, 0x08	; 8
 102:	8d 7f       	andi	r24, 0xFD	; 253
 104:	88 b9       	out	0x08, r24	; 8
 106:	ef e3       	ldi	r30, 0x3F	; 63
 108:	fc e9       	ldi	r31, 0x9C	; 156
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <ENVIA_CMD+0x64>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <ENVIA_CMD+0x6a>
 110:	00 00       	nop
 112:	08 95       	ret

00000114 <LCD_INICIALIZA>:
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	87 b9       	out	0x07, r24	; 7
 118:	8f e5       	ldi	r24, 0x5F	; 95
 11a:	9a ee       	ldi	r25, 0xEA	; 234
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_INICIALIZA+0x8>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_INICIALIZA+0xe>
 122:	00 00       	nop
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 12a:	88 e2       	ldi	r24, 0x28	; 40
 12c:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 130:	8c e0       	ldi	r24, 0x0C	; 12
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 136:	86 e0       	ldi	r24, 0x06	; 6
 138:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 142:	80 e8       	ldi	r24, 0x80	; 128
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 148:	08 95       	ret

0000014a <ENVIA_DATO>:
 14a:	98 2f       	mov	r25, r24
 14c:	90 7f       	andi	r25, 0xF0	; 240
 14e:	96 95       	lsr	r25
 150:	96 95       	lsr	r25
 152:	98 b9       	out	0x08, r25	; 8
 154:	98 b1       	in	r25, 0x08	; 8
 156:	93 60       	ori	r25, 0x03	; 3
 158:	98 b9       	out	0x08, r25	; 8
 15a:	ef e9       	ldi	r30, 0x9F	; 159
 15c:	ff e0       	ldi	r31, 0x0F	; 15
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <ENVIA_DATO+0x14>
 162:	00 c0       	rjmp	.+0      	; 0x164 <ENVIA_DATO+0x1a>
 164:	00 00       	nop
 166:	98 b1       	in	r25, 0x08	; 8
 168:	9d 7f       	andi	r25, 0xFD	; 253
 16a:	98 b9       	out	0x08, r25	; 8
 16c:	98 b1       	in	r25, 0x08	; 8
 16e:	9e 7f       	andi	r25, 0xFE	; 254
 170:	98 b9       	out	0x08, r25	; 8
 172:	ef e3       	ldi	r30, 0x3F	; 63
 174:	fc e9       	ldi	r31, 0x9C	; 156
 176:	31 97       	sbiw	r30, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <ENVIA_DATO+0x2c>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <ENVIA_DATO+0x32>
 17c:	00 00       	nop
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	8c 73       	andi	r24, 0x3C	; 60
 18a:	88 b9       	out	0x08, r24	; 8
 18c:	88 b1       	in	r24, 0x08	; 8
 18e:	83 60       	ori	r24, 0x03	; 3
 190:	88 b9       	out	0x08, r24	; 8
 192:	8f e9       	ldi	r24, 0x9F	; 159
 194:	9f e0       	ldi	r25, 0x0F	; 15
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <ENVIA_DATO+0x4c>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <ENVIA_DATO+0x52>
 19c:	00 00       	nop
 19e:	88 b1       	in	r24, 0x08	; 8
 1a0:	8d 7f       	andi	r24, 0xFD	; 253
 1a2:	88 b9       	out	0x08, r24	; 8
 1a4:	88 b1       	in	r24, 0x08	; 8
 1a6:	8e 7f       	andi	r24, 0xFE	; 254
 1a8:	88 b9       	out	0x08, r24	; 8
 1aa:	ef e3       	ldi	r30, 0x3F	; 63
 1ac:	fc e9       	ldi	r31, 0x9C	; 156
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <ENVIA_DATO+0x64>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <ENVIA_DATO+0x6a>
 1b4:	00 00       	nop
 1b6:	08 95       	ret

000001b8 <ENVIA_CADENA>:
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	8c 01       	movw	r16, r24
 1c2:	c0 e0       	ldi	r28, 0x00	; 0
 1c4:	d0 e0       	ldi	r29, 0x00	; 0
 1c6:	03 c0       	rjmp	.+6      	; 0x1ce <ENVIA_CADENA+0x16>
 1c8:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
 1cc:	21 96       	adiw	r28, 0x01	; 1
 1ce:	f8 01       	movw	r30, r16
 1d0:	ec 0f       	add	r30, r28
 1d2:	fd 1f       	adc	r31, r29
 1d4:	80 81       	ld	r24, Z
 1d6:	81 11       	cpse	r24, r1
 1d8:	f7 cf       	rjmp	.-18     	; 0x1c8 <ENVIA_CADENA+0x10>
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	1f 91       	pop	r17
 1e0:	0f 91       	pop	r16
 1e2:	08 95       	ret

000001e4 <LIMPIA_LCD>:
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1ea:	08 95       	ret

000001ec <POS_LINEA1>:
 1ec:	80 68       	ori	r24, 0x80	; 128
 1ee:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1f2:	08 95       	ret

000001f4 <POS_LINEA2>:
 1f4:	80 6c       	ori	r24, 0xC0	; 192
 1f6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1fa:	08 95       	ret

000001fc <initSys>:
int a, D0, D1;
char str[16];

void initSys(){
	
	DDRD = 0XF0;
 1fc:	80 ef       	ldi	r24, 0xF0	; 240
 1fe:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0X0F;
 200:	8f e0       	ldi	r24, 0x0F	; 15
 202:	8b b9       	out	0x0b, r24	; 11
	//External T0 pin Clock on falling edge 1024
	TCCR0B = (0<<WGM02)|(1<<CS02)|(0<<CS01)|(1<<CS00);
 204:	85 e0       	ldi	r24, 0x05	; 5
 206:	85 bd       	out	0x25, r24	; 37
	// COM0AX
	// WGM00 PWM ACTIVATE
	TCCR0A = (0<<COM0A1)|(1<<COM0A0)|(0<<WGM00)|(1<<WGM01);
 208:	82 e4       	ldi	r24, 0x42	; 66
 20a:	84 bd       	out	0x24, r24	; 36
	
	TIMSK0 = (0<<OCIE0B)|(1<<OCIE0A)|(0<<TOIE0);
 20c:	82 e0       	ldi	r24, 0x02	; 2
 20e:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	OCR0A = 200;
 212:	88 ec       	ldi	r24, 0xC8	; 200
 214:	87 bd       	out	0x27, r24	; 39
	TCNT0 = 0;
 216:	16 bc       	out	0x26, r1	; 38
 218:	08 95       	ret

0000021a <changeFrec>:
}

void changeFrec(int dato){
	
	switch (dato){
 21a:	82 30       	cpi	r24, 0x02	; 2
 21c:	91 05       	cpc	r25, r1
 21e:	69 f1       	breq	.+90     	; 0x27a <changeFrec+0x60>
 220:	2c f4       	brge	.+10     	; 0x22c <changeFrec+0x12>
 222:	00 97       	sbiw	r24, 0x00	; 0
 224:	51 f0       	breq	.+20     	; 0x23a <changeFrec+0x20>
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	c1 f0       	breq	.+48     	; 0x25a <changeFrec+0x40>
 22a:	08 95       	ret
 22c:	83 30       	cpi	r24, 0x03	; 3
 22e:	91 05       	cpc	r25, r1
 230:	a1 f1       	breq	.+104    	; 0x29a <changeFrec+0x80>
 232:	04 97       	sbiw	r24, 0x04	; 4
 234:	09 f4       	brne	.+2      	; 0x238 <changeFrec+0x1e>
 236:	41 c0       	rjmp	.+130    	; 0x2ba <changeFrec+0xa0>
 238:	08 95       	ret
		case (0):
		OCR0A = 155;
 23a:	8b e9       	ldi	r24, 0x9B	; 155
 23c:	87 bd       	out	0x27, r24	; 39
		POS_LINEA1(13);
 23e:	8d e0       	ldi	r24, 0x0D	; 13
 240:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA1>
		ENVIA_DATO('1');
 244:	81 e3       	ldi	r24, 0x31	; 49
 246:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		POS_LINEA2(2);
 24a:	82 e0       	ldi	r24, 0x02	; 2
 24c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
		ENVIA_CADENA(" 50   Hz ");
 250:	80 e0       	ldi	r24, 0x00	; 0
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
		
		//ENVIA_CADENA('1');
		break;
 258:	08 95       	ret
		case (1):
		OCR0A = 77;
 25a:	8d e4       	ldi	r24, 0x4D	; 77
 25c:	87 bd       	out	0x27, r24	; 39
		POS_LINEA1(13);
 25e:	8d e0       	ldi	r24, 0x0D	; 13
 260:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA1>
		ENVIA_DATO('2');
 264:	82 e3       	ldi	r24, 0x32	; 50
 266:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		POS_LINEA2(2);
 26a:	82 e0       	ldi	r24, 0x02	; 2
 26c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
		ENVIA_CADENA(" 100  Hz");
 270:	8a e0       	ldi	r24, 0x0A	; 10
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
		
		
		break;
 278:	08 95       	ret
		case (2):
		OCR0A = 15;
 27a:	8f e0       	ldi	r24, 0x0F	; 15
 27c:	87 bd       	out	0x27, r24	; 39
		POS_LINEA1(13);
 27e:	8d e0       	ldi	r24, 0x0D	; 13
 280:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA1>
		ENVIA_DATO('3');
 284:	83 e3       	ldi	r24, 0x33	; 51
 286:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		POS_LINEA2(2);
 28a:	82 e0       	ldi	r24, 0x02	; 2
 28c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
		ENVIA_CADENA(" 500  Hz");
 290:	83 e1       	ldi	r24, 0x13	; 19
 292:	91 e0       	ldi	r25, 0x01	; 1
 294:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
		
		break;
 298:	08 95       	ret
		case (3):
		OCR0A = 7;
 29a:	87 e0       	ldi	r24, 0x07	; 7
 29c:	87 bd       	out	0x27, r24	; 39
		POS_LINEA1(13);
 29e:	8d e0       	ldi	r24, 0x0D	; 13
 2a0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA1>
		ENVIA_DATO('4');
 2a4:	84 e3       	ldi	r24, 0x34	; 52
 2a6:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		POS_LINEA2(2);
 2aa:	82 e0       	ldi	r24, 0x02	; 2
 2ac:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
		ENVIA_CADENA(" 1   kHz ");
 2b0:	8c e1       	ldi	r24, 0x1C	; 28
 2b2:	91 e0       	ldi	r25, 0x01	; 1
 2b4:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
		
		break;
 2b8:	08 95       	ret
		case (4):
		OCR0A = 3;
 2ba:	83 e0       	ldi	r24, 0x03	; 3
 2bc:	87 bd       	out	0x27, r24	; 39
		POS_LINEA1(13);
 2be:	8d e0       	ldi	r24, 0x0D	; 13
 2c0:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA1>
		ENVIA_DATO('5');
 2c4:	85 e3       	ldi	r24, 0x35	; 53
 2c6:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		POS_LINEA2(2);
 2ca:	82 e0       	ldi	r24, 0x02	; 2
 2cc:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
		ENVIA_CADENA(" 2   kHz ");
 2d0:	86 e2       	ldi	r24, 0x26	; 38
 2d2:	91 e0       	ldi	r25, 0x01	; 1
 2d4:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
 2d8:	08 95       	ret

000002da <main>:

int main(void)
{
	
	int level=0;
	a = level;
 2da:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <a+0x1>
 2de:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <a>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 2e2:	4a e0       	ldi	r20, 0x0A	; 10
 2e4:	6e e3       	ldi	r22, 0x3E	; 62
 2e6:	71 e0       	ldi	r23, 0x01	; 1
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	0e 94 be 01 	call	0x37c	; 0x37c <__itoa_ncheck>
	itoa(a, str, 10);
	LCD_INICIALIZA();
 2f0:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_INICIALIZA>
	LIMPIA_LCD();
 2f4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
	POS_LINEA1(2);
 2f8:	82 e0       	ldi	r24, 0x02	; 2
 2fa:	0e 94 f6 00 	call	0x1ec	; 0x1ec <POS_LINEA1>
	ENVIA_CADENA("Frecuencia ");
 2fe:	80 e3       	ldi	r24, 0x30	; 48
 300:	91 e0       	ldi	r25, 0x01	; 1
 302:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
	POS_LINEA2(2);
 306:	82 e0       	ldi	r24, 0x02	; 2
 308:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
	ENVIA_CADENA(str);
 30c:	8e e3       	ldi	r24, 0x3E	; 62
 30e:	91 e0       	ldi	r25, 0x01	; 1
 310:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
	initSys();
 314:	0e 94 fe 00 	call	0x1fc	; 0x1fc <initSys>
}

int main(void)
{
	
	int level=0;
 318:	c0 e0       	ldi	r28, 0x00	; 0
 31a:	d0 e0       	ldi	r29, 0x00	; 0
	initSys();
	
	
	while (1)
	{
		D0 = PIND & 0b11111111;
 31c:	89 b1       	in	r24, 0x09	; 9
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <__data_end+0x1>
 324:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <__data_end>
		D1 = PIND & 0b11111111;
 328:	29 b1       	in	r18, 0x09	; 9
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	30 93 51 01 	sts	0x0151, r19	; 0x800151 <D1+0x1>
 330:	20 93 50 01 	sts	0x0150, r18	; 0x800150 <D1>
		
		if(D0 == 0X0E ){
 334:	0e 97       	sbiw	r24, 0x0e	; 14
 336:	79 f4       	brne	.+30     	; 0x356 <main+0x7c>
			//low
			if(level ==0){
 338:	20 97       	sbiw	r28, 0x00	; 0
 33a:	29 f4       	brne	.+10     	; 0x346 <main+0x6c>
				changeFrec (0);
 33c:	80 e0       	ldi	r24, 0x00	; 0
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 0d 01 	call	0x21a	; 0x21a <changeFrec>
 344:	eb cf       	rjmp	.-42     	; 0x31c <main+0x42>
			}
			else{
				level--;
 346:	21 97       	sbiw	r28, 0x01	; 1
				POS_LINEA2(2);
 348:	82 e0       	ldi	r24, 0x02	; 2
 34a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
				//ENVIA_CADENA("baja");
				changeFrec(level);
 34e:	ce 01       	movw	r24, r28
 350:	0e 94 0d 01 	call	0x21a	; 0x21a <changeFrec>
 354:	e3 cf       	rjmp	.-58     	; 0x31c <main+0x42>
			}
		}
		
		else if(D1 == 0X0D){
 356:	2d 30       	cpi	r18, 0x0D	; 13
 358:	31 05       	cpc	r19, r1
 35a:	01 f7       	brne	.-64     	; 0x31c <main+0x42>
			if (level ==5){
 35c:	c5 30       	cpi	r28, 0x05	; 5
 35e:	d1 05       	cpc	r29, r1
 360:	29 f4       	brne	.+10     	; 0x36c <main+0x92>
				changeFrec(5);
 362:	85 e0       	ldi	r24, 0x05	; 5
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	0e 94 0d 01 	call	0x21a	; 0x21a <changeFrec>
 36a:	d8 cf       	rjmp	.-80     	; 0x31c <main+0x42>
			}
			else{
				level ++;
 36c:	21 96       	adiw	r28, 0x01	; 1
				POS_LINEA2(2);
 36e:	82 e0       	ldi	r24, 0x02	; 2
 370:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <POS_LINEA2>
			//	ENVIA_CADENA("sube");
				changeFrec(level);
 374:	ce 01       	movw	r24, r28
 376:	0e 94 0d 01 	call	0x21a	; 0x21a <changeFrec>
 37a:	d0 cf       	rjmp	.-96     	; 0x31c <main+0x42>

0000037c <__itoa_ncheck>:
 37c:	bb 27       	eor	r27, r27
 37e:	4a 30       	cpi	r20, 0x0A	; 10
 380:	31 f4       	brne	.+12     	; 0x38e <__itoa_ncheck+0x12>
 382:	99 23       	and	r25, r25
 384:	22 f4       	brpl	.+8      	; 0x38e <__itoa_ncheck+0x12>
 386:	bd e2       	ldi	r27, 0x2D	; 45
 388:	90 95       	com	r25
 38a:	81 95       	neg	r24
 38c:	9f 4f       	sbci	r25, 0xFF	; 255
 38e:	0c 94 ca 01 	jmp	0x394	; 0x394 <__utoa_common>

00000392 <__utoa_ncheck>:
 392:	bb 27       	eor	r27, r27

00000394 <__utoa_common>:
 394:	fb 01       	movw	r30, r22
 396:	55 27       	eor	r21, r21
 398:	aa 27       	eor	r26, r26
 39a:	88 0f       	add	r24, r24
 39c:	99 1f       	adc	r25, r25
 39e:	aa 1f       	adc	r26, r26
 3a0:	a4 17       	cp	r26, r20
 3a2:	10 f0       	brcs	.+4      	; 0x3a8 <__utoa_common+0x14>
 3a4:	a4 1b       	sub	r26, r20
 3a6:	83 95       	inc	r24
 3a8:	50 51       	subi	r21, 0x10	; 16
 3aa:	b9 f7       	brne	.-18     	; 0x39a <__utoa_common+0x6>
 3ac:	a0 5d       	subi	r26, 0xD0	; 208
 3ae:	aa 33       	cpi	r26, 0x3A	; 58
 3b0:	08 f0       	brcs	.+2      	; 0x3b4 <__utoa_common+0x20>
 3b2:	a9 5d       	subi	r26, 0xD9	; 217
 3b4:	a1 93       	st	Z+, r26
 3b6:	00 97       	sbiw	r24, 0x00	; 0
 3b8:	79 f7       	brne	.-34     	; 0x398 <__utoa_common+0x4>
 3ba:	b1 11       	cpse	r27, r1
 3bc:	b1 93       	st	Z+, r27
 3be:	11 92       	st	Z+, r1
 3c0:	cb 01       	movw	r24, r22
 3c2:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <strrev>

000003c6 <strrev>:
 3c6:	dc 01       	movw	r26, r24
 3c8:	fc 01       	movw	r30, r24
 3ca:	67 2f       	mov	r22, r23
 3cc:	71 91       	ld	r23, Z+
 3ce:	77 23       	and	r23, r23
 3d0:	e1 f7       	brne	.-8      	; 0x3ca <strrev+0x4>
 3d2:	32 97       	sbiw	r30, 0x02	; 2
 3d4:	04 c0       	rjmp	.+8      	; 0x3de <strrev+0x18>
 3d6:	7c 91       	ld	r23, X
 3d8:	6d 93       	st	X+, r22
 3da:	70 83       	st	Z, r23
 3dc:	62 91       	ld	r22, -Z
 3de:	ae 17       	cp	r26, r30
 3e0:	bf 07       	cpc	r27, r31
 3e2:	c8 f3       	brcs	.-14     	; 0x3d6 <strrev+0x10>
 3e4:	08 95       	ret

000003e6 <_exit>:
 3e6:	f8 94       	cli

000003e8 <__stop_program>:
 3e8:	ff cf       	rjmp	.-2      	; 0x3e8 <__stop_program>
