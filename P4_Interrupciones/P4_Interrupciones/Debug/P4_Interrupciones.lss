
P4_Interrupciones.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000070  00800100  00000552  000005c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000552  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000636  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000668  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  000006a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001536  00000000  00000000  00000778  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000076c  00000000  00000000  00001cae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007e5  00000000  00000000  0000241a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002e0  00000000  00000000  00002c00  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000559  00000000  00000000  00002ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000be6  00000000  00000000  00003439  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  0000401f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_1>
   8:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__vector_2>
   c:	0c 94 be 01 	jmp	0x37c	; 0x37c <__vector_3>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 00 02 	jmp	0x400	; 0x400 <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e5       	ldi	r30, 0x52	; 82
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 37       	cpi	r26, 0x70	; 112
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e7       	ldi	r26, 0x70	; 112
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 37       	cpi	r26, 0x70	; 112
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 45 02 	call	0x48a	; 0x48a <main>
  9e:	0c 94 a7 02 	jmp	0x54e	; 0x54e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ENVIA_CMD>:
	POS_LINEA2(0);
	
}
void PARPA()
{
	ENVIA_CMD(0x0F);   //0000 1111
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	96 95       	lsr	r25
  ac:	96 95       	lsr	r25
  ae:	98 b9       	out	0x08, r25	; 8
  b0:	98 b1       	in	r25, 0x08	; 8
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	98 b9       	out	0x08, r25	; 8
  b6:	98 b1       	in	r25, 0x08	; 8
  b8:	92 60       	ori	r25, 0x02	; 2
  ba:	98 b9       	out	0x08, r25	; 8
  bc:	ef e9       	ldi	r30, 0x9F	; 159
  be:	ff e0       	ldi	r31, 0x0F	; 15
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <ENVIA_CMD+0x1a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <ENVIA_CMD+0x20>
  c6:	00 00       	nop
  c8:	98 b1       	in	r25, 0x08	; 8
  ca:	9d 7f       	andi	r25, 0xFD	; 253
  cc:	98 b9       	out	0x08, r25	; 8
  ce:	ef e3       	ldi	r30, 0x3F	; 63
  d0:	fc e9       	ldi	r31, 0x9C	; 156
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <ENVIA_CMD+0x2c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <ENVIA_CMD+0x32>
  d8:	00 00       	nop
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	8c 73       	andi	r24, 0x3C	; 60
  e6:	88 b9       	out	0x08, r24	; 8
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	88 b9       	out	0x08, r24	; 8
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	88 b9       	out	0x08, r24	; 8
  f4:	8f e9       	ldi	r24, 0x9F	; 159
  f6:	9f e0       	ldi	r25, 0x0F	; 15
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <ENVIA_CMD+0x52>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <ENVIA_CMD+0x58>
  fe:	00 00       	nop
 100:	88 b1       	in	r24, 0x08	; 8
 102:	8d 7f       	andi	r24, 0xFD	; 253
 104:	88 b9       	out	0x08, r24	; 8
 106:	ef e3       	ldi	r30, 0x3F	; 63
 108:	fc e9       	ldi	r31, 0x9C	; 156
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <ENVIA_CMD+0x64>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <ENVIA_CMD+0x6a>
 110:	00 00       	nop
 112:	08 95       	ret

00000114 <LCD_INICIALIZA>:
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	87 b9       	out	0x07, r24	; 7
 118:	8f e5       	ldi	r24, 0x5F	; 95
 11a:	9a ee       	ldi	r25, 0xEA	; 234
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_INICIALIZA+0x8>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_INICIALIZA+0xe>
 122:	00 00       	nop
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 12a:	88 e2       	ldi	r24, 0x28	; 40
 12c:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 130:	8c e0       	ldi	r24, 0x0C	; 12
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 136:	86 e0       	ldi	r24, 0x06	; 6
 138:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 142:	80 e8       	ldi	r24, 0x80	; 128
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 148:	08 95       	ret

0000014a <ENVIA_DATO>:
 14a:	98 2f       	mov	r25, r24
 14c:	90 7f       	andi	r25, 0xF0	; 240
 14e:	96 95       	lsr	r25
 150:	96 95       	lsr	r25
 152:	98 b9       	out	0x08, r25	; 8
 154:	98 b1       	in	r25, 0x08	; 8
 156:	93 60       	ori	r25, 0x03	; 3
 158:	98 b9       	out	0x08, r25	; 8
 15a:	ef e9       	ldi	r30, 0x9F	; 159
 15c:	ff e0       	ldi	r31, 0x0F	; 15
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <ENVIA_DATO+0x14>
 162:	00 c0       	rjmp	.+0      	; 0x164 <ENVIA_DATO+0x1a>
 164:	00 00       	nop
 166:	98 b1       	in	r25, 0x08	; 8
 168:	9d 7f       	andi	r25, 0xFD	; 253
 16a:	98 b9       	out	0x08, r25	; 8
 16c:	98 b1       	in	r25, 0x08	; 8
 16e:	9e 7f       	andi	r25, 0xFE	; 254
 170:	98 b9       	out	0x08, r25	; 8
 172:	ef e3       	ldi	r30, 0x3F	; 63
 174:	fc e9       	ldi	r31, 0x9C	; 156
 176:	31 97       	sbiw	r30, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <ENVIA_DATO+0x2c>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <ENVIA_DATO+0x32>
 17c:	00 00       	nop
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	8c 73       	andi	r24, 0x3C	; 60
 18a:	88 b9       	out	0x08, r24	; 8
 18c:	88 b1       	in	r24, 0x08	; 8
 18e:	83 60       	ori	r24, 0x03	; 3
 190:	88 b9       	out	0x08, r24	; 8
 192:	8f e9       	ldi	r24, 0x9F	; 159
 194:	9f e0       	ldi	r25, 0x0F	; 15
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <ENVIA_DATO+0x4c>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <ENVIA_DATO+0x52>
 19c:	00 00       	nop
 19e:	88 b1       	in	r24, 0x08	; 8
 1a0:	8d 7f       	andi	r24, 0xFD	; 253
 1a2:	88 b9       	out	0x08, r24	; 8
 1a4:	88 b1       	in	r24, 0x08	; 8
 1a6:	8e 7f       	andi	r24, 0xFE	; 254
 1a8:	88 b9       	out	0x08, r24	; 8
 1aa:	ef e3       	ldi	r30, 0x3F	; 63
 1ac:	fc e9       	ldi	r31, 0x9C	; 156
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <ENVIA_DATO+0x64>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <ENVIA_DATO+0x6a>
 1b4:	00 00       	nop
 1b6:	08 95       	ret

000001b8 <ENVIA_CADENA>:
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	8c 01       	movw	r16, r24
 1c2:	c0 e0       	ldi	r28, 0x00	; 0
 1c4:	d0 e0       	ldi	r29, 0x00	; 0
 1c6:	03 c0       	rjmp	.+6      	; 0x1ce <ENVIA_CADENA+0x16>
 1c8:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
 1cc:	21 96       	adiw	r28, 0x01	; 1
 1ce:	f8 01       	movw	r30, r16
 1d0:	ec 0f       	add	r30, r28
 1d2:	fd 1f       	adc	r31, r29
 1d4:	80 81       	ld	r24, Z
 1d6:	81 11       	cpse	r24, r1
 1d8:	f7 cf       	rjmp	.-18     	; 0x1c8 <ENVIA_CADENA+0x10>
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	1f 91       	pop	r17
 1e0:	0f 91       	pop	r16
 1e2:	08 95       	ret

000001e4 <LIMPIA_LCD>:
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1ea:	08 95       	ret

000001ec <REGRESO_CASA>:
 1ec:	82 e0       	ldi	r24, 0x02	; 2
 1ee:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1f2:	08 95       	ret

000001f4 <CURSOR_DER>:
 1f4:	8c e1       	ldi	r24, 0x1C	; 28
 1f6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1fa:	08 95       	ret

000001fc <POS_LINEA1>:
 1fc:	80 68       	ori	r24, 0x80	; 128
 1fe:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 202:	08 95       	ret

00000204 <POS_LINEA2>:
 204:	80 6c       	ori	r24, 0xC0	; 192
 206:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 20a:	08 95       	ret

0000020c <CreateCustomChar>:
}

void CreateCustomChar(unsigned char * Pattern, const char Location){
 20c:	0f 93       	push	r16
 20e:	1f 93       	push	r17
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	8c 01       	movw	r16, r24
	int i=0;
	ENVIA_CMD(0x40+(Location*8));
 216:	86 2f       	mov	r24, r22
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	08 96       	adiw	r24, 0x08	; 8
 21c:	88 0f       	add	r24, r24
 21e:	88 0f       	add	r24, r24
 220:	88 0f       	add	r24, r24
 222:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
	
	for (i=0; i<8; i++){
 226:	c0 e0       	ldi	r28, 0x00	; 0
 228:	d0 e0       	ldi	r29, 0x00	; 0
 22a:	07 c0       	rjmp	.+14     	; 0x23a <CreateCustomChar+0x2e>
	ENVIA_DATO(Pattern[i]);	
 22c:	f8 01       	movw	r30, r16
 22e:	ec 0f       	add	r30, r28
 230:	fd 1f       	adc	r31, r29
 232:	80 81       	ld	r24, Z
 234:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>

void CreateCustomChar(unsigned char * Pattern, const char Location){
	int i=0;
	ENVIA_CMD(0x40+(Location*8));
	
	for (i=0; i<8; i++){
 238:	21 96       	adiw	r28, 0x01	; 1
 23a:	c8 30       	cpi	r28, 0x08	; 8
 23c:	d1 05       	cpc	r29, r1
 23e:	b4 f3       	brlt	.-20     	; 0x22c <CreateCustomChar+0x20>
	ENVIA_DATO(Pattern[i]);	
	}
 240:	df 91       	pop	r29
 242:	cf 91       	pop	r28
 244:	1f 91       	pop	r17
 246:	0f 91       	pop	r16
 248:	08 95       	ret

0000024a <__vector_1>:
unsigned char bat4[]  =    {0x00,0x00,0x1F,0x1E,0x1C,0x18,0x00,0x00};



int i=0, j=1, bandera=0, a=0x0F, b=0xAA, c= 0x00;
ISR (INT0_vect) {
 24a:	1f 92       	push	r1
 24c:	0f 92       	push	r0
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	0f 92       	push	r0
 252:	11 24       	eor	r1, r1
 254:	2f 93       	push	r18
 256:	3f 93       	push	r19
 258:	4f 93       	push	r20
 25a:	5f 93       	push	r21
 25c:	6f 93       	push	r22
 25e:	7f 93       	push	r23
 260:	8f 93       	push	r24
 262:	9f 93       	push	r25
 264:	af 93       	push	r26
 266:	bf 93       	push	r27
 268:	ef 93       	push	r30
 26a:	ff 93       	push	r31
		LIMPIA_LCD();
 26c:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
		ENVIA_CMD(0x86);
 270:	86 e8       	ldi	r24, 0x86	; 134
 272:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
		ENVIA_DATO(4);
 276:	84 e0       	ldi	r24, 0x04	; 4
 278:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		ENVIA_DATO(4);
 27c:	84 e0       	ldi	r24, 0x04	; 4
 27e:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		ENVIA_DATO(4);
 282:	84 e0       	ldi	r24, 0x04	; 4
 284:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		POS_LINEA2(3);
 288:	83 e0       	ldi	r24, 0x03	; 3
 28a:	0e 94 02 01 	call	0x204	; 0x204 <POS_LINEA2>
		ENVIA_CADENA("Jazmin");
 28e:	80 e4       	ldi	r24, 0x40	; 64
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
		ENVIA_DATO(' ');
 296:	80 e2       	ldi	r24, 0x20	; 32
 298:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		ENVIA_DATO(6);
 29c:	86 e0       	ldi	r24, 0x06	; 6
 29e:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		ENVIA_DATO(6);
 2a2:	86 e0       	ldi	r24, 0x06	; 6
 2a4:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
		ENVIA_DATO(6);
 2a8:	86 e0       	ldi	r24, 0x06	; 6
 2aa:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ae:	2f ef       	ldi	r18, 0xFF	; 255
 2b0:	89 e6       	ldi	r24, 0x69	; 105
 2b2:	98 e1       	ldi	r25, 0x18	; 24
 2b4:	21 50       	subi	r18, 0x01	; 1
 2b6:	80 40       	sbci	r24, 0x00	; 0
 2b8:	90 40       	sbci	r25, 0x00	; 0
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <__vector_1+0x6a>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <__vector_1+0x74>
 2be:	00 00       	nop
		
		_delay_ms(500);
		LIMPIA_LCD();
 2c0:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
		
		
}
 2c4:	ff 91       	pop	r31
 2c6:	ef 91       	pop	r30
 2c8:	bf 91       	pop	r27
 2ca:	af 91       	pop	r26
 2cc:	9f 91       	pop	r25
 2ce:	8f 91       	pop	r24
 2d0:	7f 91       	pop	r23
 2d2:	6f 91       	pop	r22
 2d4:	5f 91       	pop	r21
 2d6:	4f 91       	pop	r20
 2d8:	3f 91       	pop	r19
 2da:	2f 91       	pop	r18
 2dc:	0f 90       	pop	r0
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	0f 90       	pop	r0
 2e2:	1f 90       	pop	r1
 2e4:	18 95       	reti

000002e6 <__vector_2>:

ISR (INT1_vect) {
 2e6:	1f 92       	push	r1
 2e8:	0f 92       	push	r0
 2ea:	0f b6       	in	r0, 0x3f	; 63
 2ec:	0f 92       	push	r0
 2ee:	11 24       	eor	r1, r1
 2f0:	2f 93       	push	r18
 2f2:	3f 93       	push	r19
 2f4:	4f 93       	push	r20
 2f6:	5f 93       	push	r21
 2f8:	6f 93       	push	r22
 2fa:	7f 93       	push	r23
 2fc:	8f 93       	push	r24
 2fe:	9f 93       	push	r25
 300:	af 93       	push	r26
 302:	bf 93       	push	r27
 304:	ef 93       	push	r30
 306:	ff 93       	push	r31
	LIMPIA_LCD();
 308:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
	
	POS_LINEA1(5);
 30c:	85 e0       	ldi	r24, 0x05	; 5
 30e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <POS_LINEA1>
	ENVIA_CADENA("Flores");
 312:	87 e4       	ldi	r24, 0x47	; 71
 314:	91 e0       	ldi	r25, 0x01	; 1
 316:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
	
	ENVIA_DATO(6);
 31a:	86 e0       	ldi	r24, 0x06	; 6
 31c:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	POS_LINEA2(0x86);
 320:	86 e8       	ldi	r24, 0x86	; 134
 322:	0e 94 02 01 	call	0x204	; 0x204 <POS_LINEA2>
	ENVIA_DATO(5);
 326:	85 e0       	ldi	r24, 0x05	; 5
 328:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(5);
 32c:	85 e0       	ldi	r24, 0x05	; 5
 32e:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(5);
 332:	85 e0       	ldi	r24, 0x05	; 5
 334:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(5);
 338:	85 e0       	ldi	r24, 0x05	; 5
 33a:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(5);
 33e:	85 e0       	ldi	r24, 0x05	; 5
 340:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
 344:	2f ef       	ldi	r18, 0xFF	; 255
 346:	89 e6       	ldi	r24, 0x69	; 105
 348:	98 e1       	ldi	r25, 0x18	; 24
 34a:	21 50       	subi	r18, 0x01	; 1
 34c:	80 40       	sbci	r24, 0x00	; 0
 34e:	90 40       	sbci	r25, 0x00	; 0
 350:	e1 f7       	brne	.-8      	; 0x34a <__vector_2+0x64>
 352:	00 c0       	rjmp	.+0      	; 0x354 <__vector_2+0x6e>
 354:	00 00       	nop
	_delay_ms(500);
	LIMPIA_LCD();
 356:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
}
 35a:	ff 91       	pop	r31
 35c:	ef 91       	pop	r30
 35e:	bf 91       	pop	r27
 360:	af 91       	pop	r26
 362:	9f 91       	pop	r25
 364:	8f 91       	pop	r24
 366:	7f 91       	pop	r23
 368:	6f 91       	pop	r22
 36a:	5f 91       	pop	r21
 36c:	4f 91       	pop	r20
 36e:	3f 91       	pop	r19
 370:	2f 91       	pop	r18
 372:	0f 90       	pop	r0
 374:	0f be       	out	0x3f, r0	; 63
 376:	0f 90       	pop	r0
 378:	1f 90       	pop	r1
 37a:	18 95       	reti

0000037c <__vector_3>:
	ENVIA_CADENA("Soy la venganza");
	_delay_ms(500);
	
}
*/
ISR (PCINT0_vect) {
 37c:	1f 92       	push	r1
 37e:	0f 92       	push	r0
 380:	0f b6       	in	r0, 0x3f	; 63
 382:	0f 92       	push	r0
 384:	11 24       	eor	r1, r1
 386:	2f 93       	push	r18
 388:	3f 93       	push	r19
 38a:	4f 93       	push	r20
 38c:	5f 93       	push	r21
 38e:	6f 93       	push	r22
 390:	7f 93       	push	r23
 392:	8f 93       	push	r24
 394:	9f 93       	push	r25
 396:	af 93       	push	r26
 398:	bf 93       	push	r27
 39a:	ef 93       	push	r30
 39c:	ff 93       	push	r31
	LIMPIA_LCD();
 39e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
	ENVIA_CMD(0x86);
 3a2:	86 e8       	ldi	r24, 0x86	; 134
 3a4:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
	ENVIA_DATO(7);
 3a8:	87 e0       	ldi	r24, 0x07	; 7
 3aa:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(7);
 3ae:	87 e0       	ldi	r24, 0x07	; 7
 3b0:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(7);
 3b4:	87 e0       	ldi	r24, 0x07	; 7
 3b6:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	POS_LINEA2(5);
 3ba:	85 e0       	ldi	r24, 0x05	; 5
 3bc:	0e 94 02 01 	call	0x204	; 0x204 <POS_LINEA2>
	ENVIA_CADENA("Upiita");
 3c0:	8e e4       	ldi	r24, 0x4E	; 78
 3c2:	91 e0       	ldi	r25, 0x01	; 1
 3c4:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
 3c8:	2f ef       	ldi	r18, 0xFF	; 255
 3ca:	89 e6       	ldi	r24, 0x69	; 105
 3cc:	98 e1       	ldi	r25, 0x18	; 24
 3ce:	21 50       	subi	r18, 0x01	; 1
 3d0:	80 40       	sbci	r24, 0x00	; 0
 3d2:	90 40       	sbci	r25, 0x00	; 0
 3d4:	e1 f7       	brne	.-8      	; 0x3ce <__vector_3+0x52>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <__vector_3+0x5c>
 3d8:	00 00       	nop
	_delay_ms(500);	
	LIMPIA_LCD();
 3da:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
}
 3de:	ff 91       	pop	r31
 3e0:	ef 91       	pop	r30
 3e2:	bf 91       	pop	r27
 3e4:	af 91       	pop	r26
 3e6:	9f 91       	pop	r25
 3e8:	8f 91       	pop	r24
 3ea:	7f 91       	pop	r23
 3ec:	6f 91       	pop	r22
 3ee:	5f 91       	pop	r21
 3f0:	4f 91       	pop	r20
 3f2:	3f 91       	pop	r19
 3f4:	2f 91       	pop	r18
 3f6:	0f 90       	pop	r0
 3f8:	0f be       	out	0x3f, r0	; 63
 3fa:	0f 90       	pop	r0
 3fc:	1f 90       	pop	r1
 3fe:	18 95       	reti

00000400 <__vector_5>:

ISR (PCINT2_vect) {
 400:	1f 92       	push	r1
 402:	0f 92       	push	r0
 404:	0f b6       	in	r0, 0x3f	; 63
 406:	0f 92       	push	r0
 408:	11 24       	eor	r1, r1
 40a:	2f 93       	push	r18
 40c:	3f 93       	push	r19
 40e:	4f 93       	push	r20
 410:	5f 93       	push	r21
 412:	6f 93       	push	r22
 414:	7f 93       	push	r23
 416:	8f 93       	push	r24
 418:	9f 93       	push	r25
 41a:	af 93       	push	r26
 41c:	bf 93       	push	r27
 41e:	ef 93       	push	r30
 420:	ff 93       	push	r31
	LIMPIA_LCD();
 422:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
	ENVIA_CMD(0x86);
 426:	86 e8       	ldi	r24, 0x86	; 134
 428:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
	
	ENVIA_DATO(2);
 42c:	82 e0       	ldi	r24, 0x02	; 2
 42e:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(0);
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(1);
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	ENVIA_DATO(3);
 43e:	83 e0       	ldi	r24, 0x03	; 3
 440:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
	
	POS_LINEA2(1);
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	0e 94 02 01 	call	0x204	; 0x204 <POS_LINEA2>
	ENVIA_CADENA("la Venganza...");
 44a:	85 e5       	ldi	r24, 0x55	; 85
 44c:	91 e0       	ldi	r25, 0x01	; 1
 44e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
 452:	2f ef       	ldi	r18, 0xFF	; 255
 454:	89 e6       	ldi	r24, 0x69	; 105
 456:	98 e1       	ldi	r25, 0x18	; 24
 458:	21 50       	subi	r18, 0x01	; 1
 45a:	80 40       	sbci	r24, 0x00	; 0
 45c:	90 40       	sbci	r25, 0x00	; 0
 45e:	e1 f7       	brne	.-8      	; 0x458 <__vector_5+0x58>
 460:	00 c0       	rjmp	.+0      	; 0x462 <__vector_5+0x62>
 462:	00 00       	nop
	_delay_ms(500);
	LIMPIA_LCD();
 464:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
}
 468:	ff 91       	pop	r31
 46a:	ef 91       	pop	r30
 46c:	bf 91       	pop	r27
 46e:	af 91       	pop	r26
 470:	9f 91       	pop	r25
 472:	8f 91       	pop	r24
 474:	7f 91       	pop	r23
 476:	6f 91       	pop	r22
 478:	5f 91       	pop	r21
 47a:	4f 91       	pop	r20
 47c:	3f 91       	pop	r19
 47e:	2f 91       	pop	r18
 480:	0f 90       	pop	r0
 482:	0f be       	out	0x3f, r0	; 63
 484:	0f 90       	pop	r0
 486:	1f 90       	pop	r1
 488:	18 95       	reti

0000048a <main>:


int main(void)
{
	
    DDRB =0X00;
 48a:	14 b8       	out	0x04, r1	; 4
    DDRD =0X00;
 48c:	1a b8       	out	0x0a, r1	; 10
    PORTB =0b00000001;
 48e:	81 e0       	ldi	r24, 0x01	; 1
 490:	85 b9       	out	0x05, r24	; 5
    PORTD =0b00001101;
 492:	8d e0       	ldi	r24, 0x0D	; 13
 494:	8b b9       	out	0x0b, r24	; 11
	
	/* Replace with your application code */
    cli();
 496:	f8 94       	cli
    LCD_INICIALIZA();
 498:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_INICIALIZA>
    REGRESO_CASA();
 49c:	0e 94 f6 00 	call	0x1ec	; 0x1ec <REGRESO_CASA>
    CURSOR_DER();
 4a0:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <CURSOR_DER>
    
    CreateCustomChar(bat1,0);
 4a4:	60 e0       	ldi	r22, 0x00	; 0
 4a6:	88 e1       	ldi	r24, 0x18	; 24
 4a8:	91 e0       	ldi	r25, 0x01	; 1
 4aa:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
    CreateCustomChar(bat2,1);
 4ae:	61 e0       	ldi	r22, 0x01	; 1
 4b0:	80 e1       	ldi	r24, 0x10	; 16
 4b2:	91 e0       	ldi	r25, 0x01	; 1
 4b4:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
    CreateCustomChar(bat3,2);
 4b8:	62 e0       	ldi	r22, 0x02	; 2
 4ba:	88 e0       	ldi	r24, 0x08	; 8
 4bc:	91 e0       	ldi	r25, 0x01	; 1
 4be:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
    CreateCustomChar(bat4,3);
 4c2:	63 e0       	ldi	r22, 0x03	; 3
 4c4:	80 e0       	ldi	r24, 0x00	; 0
 4c6:	91 e0       	ldi	r25, 0x01	; 1
 4c8:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
    
    CreateCustomChar(pattern4,4);
 4cc:	64 e0       	ldi	r22, 0x04	; 4
 4ce:	88 e3       	ldi	r24, 0x38	; 56
 4d0:	91 e0       	ldi	r25, 0x01	; 1
 4d2:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
    CreateCustomChar(pattern5,5);
 4d6:	65 e0       	ldi	r22, 0x05	; 5
 4d8:	80 e3       	ldi	r24, 0x30	; 48
 4da:	91 e0       	ldi	r25, 0x01	; 1
 4dc:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
    CreateCustomChar(pattern6,6);
 4e0:	66 e0       	ldi	r22, 0x06	; 6
 4e2:	88 e2       	ldi	r24, 0x28	; 40
 4e4:	91 e0       	ldi	r25, 0x01	; 1
 4e6:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
    CreateCustomChar(pattern7,7);
 4ea:	67 e0       	ldi	r22, 0x07	; 7
 4ec:	80 e2       	ldi	r24, 0x20	; 32
 4ee:	91 e0       	ldi	r25, 0x01	; 1
 4f0:	0e 94 06 01 	call	0x20c	; 0x20c <CreateCustomChar>
	
	
	
    
	EIMSK |= (1<<INT0);
 4f4:	8d b3       	in	r24, 0x1d	; 29
 4f6:	81 60       	ori	r24, 0x01	; 1
 4f8:	8d bb       	out	0x1d, r24	; 29
	EICRA |= (1<<ISC01)|(1<<ISC00);
 4fa:	e9 e6       	ldi	r30, 0x69	; 105
 4fc:	f0 e0       	ldi	r31, 0x00	; 0
 4fe:	80 81       	ld	r24, Z
 500:	83 60       	ori	r24, 0x03	; 3
 502:	80 83       	st	Z, r24
	
	EIMSK |= (1<<INT1);
 504:	8d b3       	in	r24, 0x1d	; 29
 506:	82 60       	ori	r24, 0x02	; 2
 508:	8d bb       	out	0x1d, r24	; 29
	EICRA |= (1<<ISC01)|(1<<ISC00);
 50a:	80 81       	ld	r24, Z
 50c:	83 60       	ori	r24, 0x03	; 3
 50e:	80 83       	st	Z, r24
    
	PCICR |= (1<<PCIE2);
 510:	e8 e6       	ldi	r30, 0x68	; 104
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	80 81       	ld	r24, Z
 516:	84 60       	ori	r24, 0x04	; 4
 518:	80 83       	st	Z, r24
	PCICR |= (0<<PCIE1);
 51a:	80 81       	ld	r24, Z
 51c:	80 83       	st	Z, r24
	PCICR |= (1<<PCIE0);
 51e:	80 81       	ld	r24, Z
 520:	81 60       	ori	r24, 0x01	; 1
 522:	80 83       	st	Z, r24
	
	PCMSK0|= (1<<PCINT0);
 524:	eb e6       	ldi	r30, 0x6B	; 107
 526:	f0 e0       	ldi	r31, 0x00	; 0
 528:	80 81       	ld	r24, Z
 52a:	81 60       	ori	r24, 0x01	; 1
 52c:	80 83       	st	Z, r24
	PCMSK2|= (1<<PCINT16);
 52e:	ed e6       	ldi	r30, 0x6D	; 109
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	80 81       	ld	r24, Z
 534:	81 60       	ori	r24, 0x01	; 1
 536:	80 83       	st	Z, r24
	
	LIMPIA_LCD();
 538:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
    POS_LINEA2(3);
 53c:	83 e0       	ldi	r24, 0x03	; 3
 53e:	0e 94 02 01 	call	0x204	; 0x204 <POS_LINEA2>
    ENVIA_CADENA("Comienza...");
 542:	84 e6       	ldi	r24, 0x64	; 100
 544:	91 e0       	ldi	r25, 0x01	; 1
 546:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
	sei();
 54a:	78 94       	sei
 54c:	ff cf       	rjmp	.-2      	; 0x54c <main+0xc2>

0000054e <_exit>:
 54e:	f8 94       	cli

00000550 <__stop_program>:
 550:	ff cf       	rjmp	.-2      	; 0x550 <__stop_program>
