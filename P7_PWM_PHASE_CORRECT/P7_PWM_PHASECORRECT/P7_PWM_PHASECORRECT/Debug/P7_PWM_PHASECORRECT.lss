
P7_PWM_PHASECORRECT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000568  000005fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000568  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800116  00800116  00000612  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000612  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000684  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c6c  00000000  00000000  0000077c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007de  00000000  00000000  000023e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a3c  00000000  00000000  00002bc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000298  00000000  00000000  00003604  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053c  00000000  00000000  0000389c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000136f  00000000  00000000  00003dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00005147  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_1>
   8:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 32       	cpi	r26, 0x2A	; 42
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 4a 01 	call	0x294	; 0x294 <main>
  9e:	0c 94 b2 02 	jmp	0x564	; 0x564 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ENVIA_CMD>:
void PWM_OFF()
{
	
	TCCR1B &=~ (1<<CS10);
	TCCR1B &=~ (1<<CS11);
	TCCR1B &=~ (1<<CS12);
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	96 95       	lsr	r25
  ac:	96 95       	lsr	r25
  ae:	98 b9       	out	0x08, r25	; 8
  b0:	98 b1       	in	r25, 0x08	; 8
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	98 b9       	out	0x08, r25	; 8
  b6:	98 b1       	in	r25, 0x08	; 8
  b8:	92 60       	ori	r25, 0x02	; 2
  ba:	98 b9       	out	0x08, r25	; 8
  bc:	ef e9       	ldi	r30, 0x9F	; 159
  be:	ff e0       	ldi	r31, 0x0F	; 15
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <ENVIA_CMD+0x1a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <ENVIA_CMD+0x20>
  c6:	00 00       	nop
  c8:	98 b1       	in	r25, 0x08	; 8
  ca:	9d 7f       	andi	r25, 0xFD	; 253
  cc:	98 b9       	out	0x08, r25	; 8
  ce:	ef e3       	ldi	r30, 0x3F	; 63
  d0:	fc e9       	ldi	r31, 0x9C	; 156
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <ENVIA_CMD+0x2c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <ENVIA_CMD+0x32>
  d8:	00 00       	nop
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	8c 73       	andi	r24, 0x3C	; 60
  e6:	88 b9       	out	0x08, r24	; 8
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	88 b9       	out	0x08, r24	; 8
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	88 b9       	out	0x08, r24	; 8
  f4:	8f e9       	ldi	r24, 0x9F	; 159
  f6:	9f e0       	ldi	r25, 0x0F	; 15
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <ENVIA_CMD+0x52>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <ENVIA_CMD+0x58>
  fe:	00 00       	nop
 100:	88 b1       	in	r24, 0x08	; 8
 102:	8d 7f       	andi	r24, 0xFD	; 253
 104:	88 b9       	out	0x08, r24	; 8
 106:	ef e3       	ldi	r30, 0x3F	; 63
 108:	fc e9       	ldi	r31, 0x9C	; 156
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <ENVIA_CMD+0x64>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <ENVIA_CMD+0x6a>
 110:	00 00       	nop
 112:	08 95       	ret

00000114 <LCD_INICIALIZA>:
 114:	82 e0       	ldi	r24, 0x02	; 2
 116:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 11a:	88 e2       	ldi	r24, 0x28	; 40
 11c:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 120:	8e e0       	ldi	r24, 0x0E	; 14
 122:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 126:	86 e0       	ldi	r24, 0x06	; 6
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 132:	80 e8       	ldi	r24, 0x80	; 128
 134:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 138:	08 95       	ret

0000013a <ENVIA_DATO>:
 13a:	98 2f       	mov	r25, r24
 13c:	90 7f       	andi	r25, 0xF0	; 240
 13e:	96 95       	lsr	r25
 140:	96 95       	lsr	r25
 142:	98 b9       	out	0x08, r25	; 8
 144:	98 b1       	in	r25, 0x08	; 8
 146:	93 60       	ori	r25, 0x03	; 3
 148:	98 b9       	out	0x08, r25	; 8
 14a:	ef e9       	ldi	r30, 0x9F	; 159
 14c:	ff e0       	ldi	r31, 0x0F	; 15
 14e:	31 97       	sbiw	r30, 0x01	; 1
 150:	f1 f7       	brne	.-4      	; 0x14e <ENVIA_DATO+0x14>
 152:	00 c0       	rjmp	.+0      	; 0x154 <ENVIA_DATO+0x1a>
 154:	00 00       	nop
 156:	98 b1       	in	r25, 0x08	; 8
 158:	9d 7f       	andi	r25, 0xFD	; 253
 15a:	98 b9       	out	0x08, r25	; 8
 15c:	98 b1       	in	r25, 0x08	; 8
 15e:	9e 7f       	andi	r25, 0xFE	; 254
 160:	98 b9       	out	0x08, r25	; 8
 162:	ef e3       	ldi	r30, 0x3F	; 63
 164:	fc e9       	ldi	r31, 0x9C	; 156
 166:	31 97       	sbiw	r30, 0x01	; 1
 168:	f1 f7       	brne	.-4      	; 0x166 <ENVIA_DATO+0x2c>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <ENVIA_DATO+0x32>
 16c:	00 00       	nop
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	8c 73       	andi	r24, 0x3C	; 60
 17a:	88 b9       	out	0x08, r24	; 8
 17c:	88 b1       	in	r24, 0x08	; 8
 17e:	83 60       	ori	r24, 0x03	; 3
 180:	88 b9       	out	0x08, r24	; 8
 182:	8f e9       	ldi	r24, 0x9F	; 159
 184:	9f e0       	ldi	r25, 0x0F	; 15
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <ENVIA_DATO+0x4c>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <ENVIA_DATO+0x52>
 18c:	00 00       	nop
 18e:	88 b1       	in	r24, 0x08	; 8
 190:	8d 7f       	andi	r24, 0xFD	; 253
 192:	88 b9       	out	0x08, r24	; 8
 194:	88 b1       	in	r24, 0x08	; 8
 196:	8e 7f       	andi	r24, 0xFE	; 254
 198:	88 b9       	out	0x08, r24	; 8
 19a:	ef e3       	ldi	r30, 0x3F	; 63
 19c:	fc e9       	ldi	r31, 0x9C	; 156
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <ENVIA_DATO+0x64>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <ENVIA_DATO+0x6a>
 1a4:	00 00       	nop
 1a6:	08 95       	ret

000001a8 <ENVIA_CADENA>:
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	8c 01       	movw	r16, r24
 1b2:	c0 e0       	ldi	r28, 0x00	; 0
 1b4:	d0 e0       	ldi	r29, 0x00	; 0
 1b6:	03 c0       	rjmp	.+6      	; 0x1be <ENVIA_CADENA+0x16>
 1b8:	0e 94 9d 00 	call	0x13a	; 0x13a <ENVIA_DATO>
 1bc:	21 96       	adiw	r28, 0x01	; 1
 1be:	f8 01       	movw	r30, r16
 1c0:	ec 0f       	add	r30, r28
 1c2:	fd 1f       	adc	r31, r29
 1c4:	80 81       	ld	r24, Z
 1c6:	81 11       	cpse	r24, r1
 1c8:	f7 cf       	rjmp	.-18     	; 0x1b8 <ENVIA_CADENA+0x10>
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	1f 91       	pop	r17
 1d0:	0f 91       	pop	r16
 1d2:	08 95       	ret

000001d4 <LIMPIA_LCD>:
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1da:	08 95       	ret

000001dc <PWM_init>:
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	9c 01       	movw	r18, r24
 1e2:	eb 01       	movw	r28, r22
 1e4:	82 e0       	ldi	r24, 0x02	; 2
 1e6:	84 b9       	out	0x04, r24	; 4
 1e8:	84 e0       	ldi	r24, 0x04	; 4
 1ea:	84 b9       	out	0x04, r24	; 4
 1ec:	e0 e8       	ldi	r30, 0x80	; 128
 1ee:	f0 e0       	ldi	r31, 0x00	; 0
 1f0:	80 81       	ld	r24, Z
 1f2:	8f 7b       	andi	r24, 0xBF	; 191
 1f4:	80 83       	st	Z, r24
 1f6:	80 81       	ld	r24, Z
 1f8:	80 68       	ori	r24, 0x80	; 128
 1fa:	80 83       	st	Z, r24
 1fc:	80 81       	ld	r24, Z
 1fe:	8f 7e       	andi	r24, 0xEF	; 239
 200:	80 83       	st	Z, r24
 202:	80 81       	ld	r24, Z
 204:	80 62       	ori	r24, 0x20	; 32
 206:	80 83       	st	Z, r24
 208:	80 81       	ld	r24, Z
 20a:	8e 7f       	andi	r24, 0xFE	; 254
 20c:	80 83       	st	Z, r24
 20e:	80 81       	ld	r24, Z
 210:	82 60       	ori	r24, 0x02	; 2
 212:	80 83       	st	Z, r24
 214:	e1 e8       	ldi	r30, 0x81	; 129
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	88 60       	ori	r24, 0x08	; 8
 21c:	80 83       	st	Z, r24
 21e:	80 81       	ld	r24, Z
 220:	80 61       	ori	r24, 0x10	; 16
 222:	80 83       	st	Z, r24
 224:	03 2e       	mov	r0, r19
 226:	00 0c       	add	r0, r0
 228:	44 0b       	sbc	r20, r20
 22a:	55 0b       	sbc	r21, r21
 22c:	69 e0       	ldi	r22, 0x09	; 9
 22e:	7d e3       	ldi	r23, 0x3D	; 61
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 27 02 	call	0x44e	; 0x44e <__udivmodsi4>
 238:	c9 01       	movw	r24, r18
 23a:	01 97       	sbiw	r24, 0x01	; 1
 23c:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 240:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 244:	21 50       	subi	r18, 0x01	; 1
 246:	31 09       	sbc	r19, r1
 248:	41 09       	sbc	r20, r1
 24a:	51 09       	sbc	r21, r1
 24c:	de 01       	movw	r26, r28
 24e:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__mulshisi3>
 252:	24 e6       	ldi	r18, 0x64	; 100
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	40 e0       	ldi	r20, 0x00	; 0
 258:	50 e0       	ldi	r21, 0x00	; 0
 25a:	0e 94 27 02 	call	0x44e	; 0x44e <__udivmodsi4>
 25e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 262:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 266:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 26a:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 26e:	df 91       	pop	r29
 270:	cf 91       	pop	r28
 272:	08 95       	ret

00000274 <PWM_ON>:
 274:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 278:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 27c:	e1 e8       	ldi	r30, 0x81	; 129
 27e:	f0 e0       	ldi	r31, 0x00	; 0
 280:	80 81       	ld	r24, Z
 282:	81 60       	ori	r24, 0x01	; 1
 284:	80 83       	st	Z, r24
 286:	80 81       	ld	r24, Z
 288:	8d 7f       	andi	r24, 0xFD	; 253
 28a:	80 83       	st	Z, r24
 28c:	80 81       	ld	r24, Z
 28e:	84 60       	ori	r24, 0x04	; 4
 290:	80 83       	st	Z, r24
 292:	08 95       	ret

00000294 <main>:
 294:	1a b8       	out	0x0a, r1	; 10
 296:	8f ef       	ldi	r24, 0xFF	; 255
 298:	8b b9       	out	0x0b, r24	; 11
 29a:	87 b9       	out	0x07, r24	; 7
 29c:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_INICIALIZA>
 2a0:	2f ef       	ldi	r18, 0xFF	; 255
 2a2:	89 ef       	ldi	r24, 0xF9	; 249
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	21 50       	subi	r18, 0x01	; 1
 2a8:	80 40       	sbci	r24, 0x00	; 0
 2aa:	90 40       	sbci	r25, 0x00	; 0
 2ac:	e1 f7       	brne	.-8      	; 0x2a6 <main+0x12>
 2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <main+0x1c>
 2b0:	00 00       	nop
 2b2:	f8 94       	cli
 2b4:	64 e1       	ldi	r22, 0x14	; 20
 2b6:	70 e0       	ldi	r23, 0x00	; 0
 2b8:	84 e6       	ldi	r24, 0x64	; 100
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 ee 00 	call	0x1dc	; 0x1dc <PWM_init>
 2c0:	84 e1       	ldi	r24, 0x14	; 20
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 2c8:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 2cc:	e9 e6       	ldi	r30, 0x69	; 105
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	82 60       	ori	r24, 0x02	; 2
 2d4:	80 83       	st	Z, r24
 2d6:	80 81       	ld	r24, Z
 2d8:	8c 60       	ori	r24, 0x0C	; 12
 2da:	80 83       	st	Z, r24
 2dc:	8d b3       	in	r24, 0x1d	; 29
 2de:	83 60       	ori	r24, 0x03	; 3
 2e0:	8d bb       	out	0x1d, r24	; 29
 2e2:	78 94       	sei
 2e4:	0e 94 3a 01 	call	0x274	; 0x274 <PWM_ON>
 2e8:	ff cf       	rjmp	.-2      	; 0x2e8 <main+0x54>

000002ea <PWM_SET_DUTY>:
}

void PWM_SET_DUTY(int d)
{
	OCR1B = (((F_CPU/1024/(100))-1)*d)/100;
 2ea:	2b e9       	ldi	r18, 0x9B	; 155
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	dc 01       	movw	r26, r24
 2f0:	0e 94 49 02 	call	0x492	; 0x492 <__usmulhisi3>
 2f4:	24 e6       	ldi	r18, 0x64	; 100
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	50 e0       	ldi	r21, 0x00	; 0
 2fc:	0e 94 27 02 	call	0x44e	; 0x44e <__udivmodsi4>
 300:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 304:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
 308:	08 95       	ret

0000030a <__vector_1>:
	}
}



ISR(INT0_vect){
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	0f 92       	push	r0
 312:	11 24       	eor	r1, r1
 314:	2f 93       	push	r18
 316:	3f 93       	push	r19
 318:	4f 93       	push	r20
 31a:	5f 93       	push	r21
 31c:	6f 93       	push	r22
 31e:	7f 93       	push	r23
 320:	8f 93       	push	r24
 322:	9f 93       	push	r25
 324:	af 93       	push	r26
 326:	bf 93       	push	r27
 328:	ef 93       	push	r30
 32a:	ff 93       	push	r31
	// Add
	
	
	
	if ( (x+10) <= 100){
 32c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 330:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 334:	0a 96       	adiw	r24, 0x0a	; 10
 336:	85 36       	cpi	r24, 0x65	; 101
 338:	91 05       	cpc	r25, r1
 33a:	34 f4       	brge	.+12     	; 0x348 <__vector_1+0x3e>
		
		x = x+10;
 33c:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 340:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
		PWM_SET_DUTY(x);
 344:	0e 94 75 01 	call	0x2ea	; 0x2ea <PWM_SET_DUTY>
	}
	
	a = x;
 348:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 34c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 350:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <a+0x1>
 354:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <a>
	
	itoa(a, str, 10);
 358:	4a e0       	ldi	r20, 0x0A	; 10
 35a:	50 e0       	ldi	r21, 0x00	; 0
 35c:	68 e1       	ldi	r22, 0x18	; 24
 35e:	71 e0       	ldi	r23, 0x01	; 1
 360:	0e 94 72 02 	call	0x4e4	; 0x4e4 <itoa>
	
	ENVIA_CADENA(str);
 364:	88 e1       	ldi	r24, 0x18	; 24
 366:	91 e0       	ldi	r25, 0x01	; 1
 368:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
	ENVIA_CADENA(" % duty +");
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	91 e0       	ldi	r25, 0x01	; 1
 370:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 374:	2f ef       	ldi	r18, 0xFF	; 255
 376:	83 ed       	ldi	r24, 0xD3	; 211
 378:	90 e3       	ldi	r25, 0x30	; 48
 37a:	21 50       	subi	r18, 0x01	; 1
 37c:	80 40       	sbci	r24, 0x00	; 0
 37e:	90 40       	sbci	r25, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <__vector_1+0x70>
 382:	00 c0       	rjmp	.+0      	; 0x384 <__vector_1+0x7a>
 384:	00 00       	nop
	_delay_ms(1000);
	LIMPIA_LCD();
 386:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>
	
	
};
 38a:	ff 91       	pop	r31
 38c:	ef 91       	pop	r30
 38e:	bf 91       	pop	r27
 390:	af 91       	pop	r26
 392:	9f 91       	pop	r25
 394:	8f 91       	pop	r24
 396:	7f 91       	pop	r23
 398:	6f 91       	pop	r22
 39a:	5f 91       	pop	r21
 39c:	4f 91       	pop	r20
 39e:	3f 91       	pop	r19
 3a0:	2f 91       	pop	r18
 3a2:	0f 90       	pop	r0
 3a4:	0f be       	out	0x3f, r0	; 63
 3a6:	0f 90       	pop	r0
 3a8:	1f 90       	pop	r1
 3aa:	18 95       	reti

000003ac <__vector_2>:


ISR(INT1_vect){
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	0f 92       	push	r0
 3b4:	11 24       	eor	r1, r1
 3b6:	2f 93       	push	r18
 3b8:	3f 93       	push	r19
 3ba:	4f 93       	push	r20
 3bc:	5f 93       	push	r21
 3be:	6f 93       	push	r22
 3c0:	7f 93       	push	r23
 3c2:	8f 93       	push	r24
 3c4:	9f 93       	push	r25
 3c6:	af 93       	push	r26
 3c8:	bf 93       	push	r27
 3ca:	ef 93       	push	r30
 3cc:	ff 93       	push	r31
	// Add
		
	
	if (x > 10){
 3ce:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 3d2:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 3d6:	8b 30       	cpi	r24, 0x0B	; 11
 3d8:	91 05       	cpc	r25, r1
 3da:	3c f0       	brlt	.+14     	; 0x3ea <__vector_2+0x3e>
		x = x-10;	
 3dc:	0a 97       	sbiw	r24, 0x0a	; 10
 3de:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 3e2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
		PWM_SET_DUTY(x); 
 3e6:	0e 94 75 01 	call	0x2ea	; 0x2ea <PWM_SET_DUTY>
	}
	
	a = x;
 3ea:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 3ee:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 3f2:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <a+0x1>
 3f6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <a>
	itoa(a, str, 10);
 3fa:	4a e0       	ldi	r20, 0x0A	; 10
 3fc:	50 e0       	ldi	r21, 0x00	; 0
 3fe:	68 e1       	ldi	r22, 0x18	; 24
 400:	71 e0       	ldi	r23, 0x01	; 1
 402:	0e 94 72 02 	call	0x4e4	; 0x4e4 <itoa>
	ENVIA_CADENA(str);
 406:	88 e1       	ldi	r24, 0x18	; 24
 408:	91 e0       	ldi	r25, 0x01	; 1
 40a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
	ENVIA_CADENA("  % duty -");
 40e:	8a e0       	ldi	r24, 0x0A	; 10
 410:	91 e0       	ldi	r25, 0x01	; 1
 412:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <ENVIA_CADENA>
 416:	2f ef       	ldi	r18, 0xFF	; 255
 418:	83 ed       	ldi	r24, 0xD3	; 211
 41a:	90 e3       	ldi	r25, 0x30	; 48
 41c:	21 50       	subi	r18, 0x01	; 1
 41e:	80 40       	sbci	r24, 0x00	; 0
 420:	90 40       	sbci	r25, 0x00	; 0
 422:	e1 f7       	brne	.-8      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 424:	00 c0       	rjmp	.+0      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 426:	00 00       	nop
	_delay_ms(1000);
	LIMPIA_LCD();
 428:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LIMPIA_LCD>

};
 42c:	ff 91       	pop	r31
 42e:	ef 91       	pop	r30
 430:	bf 91       	pop	r27
 432:	af 91       	pop	r26
 434:	9f 91       	pop	r25
 436:	8f 91       	pop	r24
 438:	7f 91       	pop	r23
 43a:	6f 91       	pop	r22
 43c:	5f 91       	pop	r21
 43e:	4f 91       	pop	r20
 440:	3f 91       	pop	r19
 442:	2f 91       	pop	r18
 444:	0f 90       	pop	r0
 446:	0f be       	out	0x3f, r0	; 63
 448:	0f 90       	pop	r0
 44a:	1f 90       	pop	r1
 44c:	18 95       	reti

0000044e <__udivmodsi4>:
 44e:	a1 e2       	ldi	r26, 0x21	; 33
 450:	1a 2e       	mov	r1, r26
 452:	aa 1b       	sub	r26, r26
 454:	bb 1b       	sub	r27, r27
 456:	fd 01       	movw	r30, r26
 458:	0d c0       	rjmp	.+26     	; 0x474 <__udivmodsi4_ep>

0000045a <__udivmodsi4_loop>:
 45a:	aa 1f       	adc	r26, r26
 45c:	bb 1f       	adc	r27, r27
 45e:	ee 1f       	adc	r30, r30
 460:	ff 1f       	adc	r31, r31
 462:	a2 17       	cp	r26, r18
 464:	b3 07       	cpc	r27, r19
 466:	e4 07       	cpc	r30, r20
 468:	f5 07       	cpc	r31, r21
 46a:	20 f0       	brcs	.+8      	; 0x474 <__udivmodsi4_ep>
 46c:	a2 1b       	sub	r26, r18
 46e:	b3 0b       	sbc	r27, r19
 470:	e4 0b       	sbc	r30, r20
 472:	f5 0b       	sbc	r31, r21

00000474 <__udivmodsi4_ep>:
 474:	66 1f       	adc	r22, r22
 476:	77 1f       	adc	r23, r23
 478:	88 1f       	adc	r24, r24
 47a:	99 1f       	adc	r25, r25
 47c:	1a 94       	dec	r1
 47e:	69 f7       	brne	.-38     	; 0x45a <__udivmodsi4_loop>
 480:	60 95       	com	r22
 482:	70 95       	com	r23
 484:	80 95       	com	r24
 486:	90 95       	com	r25
 488:	9b 01       	movw	r18, r22
 48a:	ac 01       	movw	r20, r24
 48c:	bd 01       	movw	r22, r26
 48e:	cf 01       	movw	r24, r30
 490:	08 95       	ret

00000492 <__usmulhisi3>:
 492:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__umulhisi3>

00000496 <__usmulhisi3_tail>:
 496:	b7 ff       	sbrs	r27, 7
 498:	08 95       	ret
 49a:	82 1b       	sub	r24, r18
 49c:	93 0b       	sbc	r25, r19
 49e:	08 95       	ret

000004a0 <__mulshisi3>:
 4a0:	b7 ff       	sbrs	r27, 7
 4a2:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__muluhisi3>

000004a6 <__mulohisi3>:
 4a6:	0e 94 67 02 	call	0x4ce	; 0x4ce <__muluhisi3>
 4aa:	82 1b       	sub	r24, r18
 4ac:	93 0b       	sbc	r25, r19
 4ae:	08 95       	ret

000004b0 <__umulhisi3>:
 4b0:	a2 9f       	mul	r26, r18
 4b2:	b0 01       	movw	r22, r0
 4b4:	b3 9f       	mul	r27, r19
 4b6:	c0 01       	movw	r24, r0
 4b8:	a3 9f       	mul	r26, r19
 4ba:	70 0d       	add	r23, r0
 4bc:	81 1d       	adc	r24, r1
 4be:	11 24       	eor	r1, r1
 4c0:	91 1d       	adc	r25, r1
 4c2:	b2 9f       	mul	r27, r18
 4c4:	70 0d       	add	r23, r0
 4c6:	81 1d       	adc	r24, r1
 4c8:	11 24       	eor	r1, r1
 4ca:	91 1d       	adc	r25, r1
 4cc:	08 95       	ret

000004ce <__muluhisi3>:
 4ce:	0e 94 58 02 	call	0x4b0	; 0x4b0 <__umulhisi3>
 4d2:	a5 9f       	mul	r26, r21
 4d4:	90 0d       	add	r25, r0
 4d6:	b4 9f       	mul	r27, r20
 4d8:	90 0d       	add	r25, r0
 4da:	a4 9f       	mul	r26, r20
 4dc:	80 0d       	add	r24, r0
 4de:	91 1d       	adc	r25, r1
 4e0:	11 24       	eor	r1, r1
 4e2:	08 95       	ret

000004e4 <itoa>:
 4e4:	45 32       	cpi	r20, 0x25	; 37
 4e6:	51 05       	cpc	r21, r1
 4e8:	20 f4       	brcc	.+8      	; 0x4f2 <itoa+0xe>
 4ea:	42 30       	cpi	r20, 0x02	; 2
 4ec:	10 f0       	brcs	.+4      	; 0x4f2 <itoa+0xe>
 4ee:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__itoa_ncheck>
 4f2:	fb 01       	movw	r30, r22
 4f4:	10 82       	st	Z, r1
 4f6:	cb 01       	movw	r24, r22
 4f8:	08 95       	ret

000004fa <__itoa_ncheck>:
 4fa:	bb 27       	eor	r27, r27
 4fc:	4a 30       	cpi	r20, 0x0A	; 10
 4fe:	31 f4       	brne	.+12     	; 0x50c <__itoa_ncheck+0x12>
 500:	99 23       	and	r25, r25
 502:	22 f4       	brpl	.+8      	; 0x50c <__itoa_ncheck+0x12>
 504:	bd e2       	ldi	r27, 0x2D	; 45
 506:	90 95       	com	r25
 508:	81 95       	neg	r24
 50a:	9f 4f       	sbci	r25, 0xFF	; 255
 50c:	0c 94 89 02 	jmp	0x512	; 0x512 <__utoa_common>

00000510 <__utoa_ncheck>:
 510:	bb 27       	eor	r27, r27

00000512 <__utoa_common>:
 512:	fb 01       	movw	r30, r22
 514:	55 27       	eor	r21, r21
 516:	aa 27       	eor	r26, r26
 518:	88 0f       	add	r24, r24
 51a:	99 1f       	adc	r25, r25
 51c:	aa 1f       	adc	r26, r26
 51e:	a4 17       	cp	r26, r20
 520:	10 f0       	brcs	.+4      	; 0x526 <__utoa_common+0x14>
 522:	a4 1b       	sub	r26, r20
 524:	83 95       	inc	r24
 526:	50 51       	subi	r21, 0x10	; 16
 528:	b9 f7       	brne	.-18     	; 0x518 <__utoa_common+0x6>
 52a:	a0 5d       	subi	r26, 0xD0	; 208
 52c:	aa 33       	cpi	r26, 0x3A	; 58
 52e:	08 f0       	brcs	.+2      	; 0x532 <__utoa_common+0x20>
 530:	a9 5d       	subi	r26, 0xD9	; 217
 532:	a1 93       	st	Z+, r26
 534:	00 97       	sbiw	r24, 0x00	; 0
 536:	79 f7       	brne	.-34     	; 0x516 <__utoa_common+0x4>
 538:	b1 11       	cpse	r27, r1
 53a:	b1 93       	st	Z+, r27
 53c:	11 92       	st	Z+, r1
 53e:	cb 01       	movw	r24, r22
 540:	0c 94 a2 02 	jmp	0x544	; 0x544 <strrev>

00000544 <strrev>:
 544:	dc 01       	movw	r26, r24
 546:	fc 01       	movw	r30, r24
 548:	67 2f       	mov	r22, r23
 54a:	71 91       	ld	r23, Z+
 54c:	77 23       	and	r23, r23
 54e:	e1 f7       	brne	.-8      	; 0x548 <strrev+0x4>
 550:	32 97       	sbiw	r30, 0x02	; 2
 552:	04 c0       	rjmp	.+8      	; 0x55c <strrev+0x18>
 554:	7c 91       	ld	r23, X
 556:	6d 93       	st	X+, r22
 558:	70 83       	st	Z, r23
 55a:	62 91       	ld	r22, -Z
 55c:	ae 17       	cp	r26, r30
 55e:	bf 07       	cpc	r27, r31
 560:	c8 f3       	brcs	.-14     	; 0x554 <strrev+0x10>
 562:	08 95       	ret

00000564 <_exit>:
 564:	f8 94       	cli

00000566 <__stop_program>:
 566:	ff cf       	rjmp	.-2      	; 0x566 <__stop_program>
