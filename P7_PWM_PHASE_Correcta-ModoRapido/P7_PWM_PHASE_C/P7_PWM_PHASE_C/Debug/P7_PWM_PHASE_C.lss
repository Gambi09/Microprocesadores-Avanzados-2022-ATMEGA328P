
P7_PWM_PHASE_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  000006c0  00000754  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800116  00800116  0000076a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000076a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000079c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012e7  00000000  00000000  000008d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c6  00000000  00000000  00001bbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000838  00000000  00000000  00002381  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  00002bbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000552  00000000  00000000  00002e80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ba4  00000000  00000000  000033d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00003f76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 09 02 	jmp	0x412	; 0x412 <__vector_1>
   8:	0c 94 5a 02 	jmp	0x4b4	; 0x4b4 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ec       	ldi	r30, 0xC0	; 192
  7c:	f6 e0       	ldi	r31, 0x06	; 6
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 32       	cpi	r26, 0x2C	; 44
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b4 01 	call	0x368	; 0x368 <main>
  9e:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <ENVIA_CMD>:
	TCCR1B &=~ (1<<CS11);
	TCCR1B &=~ (1<<CS12);
	
	TCCR0B &=~ (1<<CS00);
	TCCR0B &=~ (1<<CS01);
	TCCR0B &=~ (1<<CS02);
  a6:	98 2f       	mov	r25, r24
  a8:	90 7f       	andi	r25, 0xF0	; 240
  aa:	96 95       	lsr	r25
  ac:	96 95       	lsr	r25
  ae:	98 b9       	out	0x08, r25	; 8
  b0:	98 b1       	in	r25, 0x08	; 8
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	98 b9       	out	0x08, r25	; 8
  b6:	98 b1       	in	r25, 0x08	; 8
  b8:	92 60       	ori	r25, 0x02	; 2
  ba:	98 b9       	out	0x08, r25	; 8
  bc:	ef e9       	ldi	r30, 0x9F	; 159
  be:	ff e0       	ldi	r31, 0x0F	; 15
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <ENVIA_CMD+0x1a>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <ENVIA_CMD+0x20>
  c6:	00 00       	nop
  c8:	98 b1       	in	r25, 0x08	; 8
  ca:	9d 7f       	andi	r25, 0xFD	; 253
  cc:	98 b9       	out	0x08, r25	; 8
  ce:	ef e3       	ldi	r30, 0x3F	; 63
  d0:	fc e9       	ldi	r31, 0x9C	; 156
  d2:	31 97       	sbiw	r30, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <ENVIA_CMD+0x2c>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <ENVIA_CMD+0x32>
  d8:	00 00       	nop
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	88 0f       	add	r24, r24
  e2:	99 1f       	adc	r25, r25
  e4:	8c 73       	andi	r24, 0x3C	; 60
  e6:	88 b9       	out	0x08, r24	; 8
  e8:	88 b1       	in	r24, 0x08	; 8
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	88 b9       	out	0x08, r24	; 8
  ee:	88 b1       	in	r24, 0x08	; 8
  f0:	82 60       	ori	r24, 0x02	; 2
  f2:	88 b9       	out	0x08, r24	; 8
  f4:	8f e9       	ldi	r24, 0x9F	; 159
  f6:	9f e0       	ldi	r25, 0x0F	; 15
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <ENVIA_CMD+0x52>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <ENVIA_CMD+0x58>
  fe:	00 00       	nop
 100:	88 b1       	in	r24, 0x08	; 8
 102:	8d 7f       	andi	r24, 0xFD	; 253
 104:	88 b9       	out	0x08, r24	; 8
 106:	ef e3       	ldi	r30, 0x3F	; 63
 108:	fc e9       	ldi	r31, 0x9C	; 156
 10a:	31 97       	sbiw	r30, 0x01	; 1
 10c:	f1 f7       	brne	.-4      	; 0x10a <ENVIA_CMD+0x64>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <ENVIA_CMD+0x6a>
 110:	00 00       	nop
 112:	08 95       	ret

00000114 <LCD_INICIALIZA>:
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	87 b9       	out	0x07, r24	; 7
 118:	8f e5       	ldi	r24, 0x5F	; 95
 11a:	9a ee       	ldi	r25, 0xEA	; 234
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_INICIALIZA+0x8>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_INICIALIZA+0xe>
 122:	00 00       	nop
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 12a:	88 e2       	ldi	r24, 0x28	; 40
 12c:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 130:	8c e0       	ldi	r24, 0x0C	; 12
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 136:	86 e0       	ldi	r24, 0x06	; 6
 138:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 142:	80 e8       	ldi	r24, 0x80	; 128
 144:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 148:	08 95       	ret

0000014a <ENVIA_DATO>:
 14a:	98 2f       	mov	r25, r24
 14c:	90 7f       	andi	r25, 0xF0	; 240
 14e:	96 95       	lsr	r25
 150:	96 95       	lsr	r25
 152:	98 b9       	out	0x08, r25	; 8
 154:	98 b1       	in	r25, 0x08	; 8
 156:	93 60       	ori	r25, 0x03	; 3
 158:	98 b9       	out	0x08, r25	; 8
 15a:	ef e9       	ldi	r30, 0x9F	; 159
 15c:	ff e0       	ldi	r31, 0x0F	; 15
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <ENVIA_DATO+0x14>
 162:	00 c0       	rjmp	.+0      	; 0x164 <ENVIA_DATO+0x1a>
 164:	00 00       	nop
 166:	98 b1       	in	r25, 0x08	; 8
 168:	9d 7f       	andi	r25, 0xFD	; 253
 16a:	98 b9       	out	0x08, r25	; 8
 16c:	98 b1       	in	r25, 0x08	; 8
 16e:	9e 7f       	andi	r25, 0xFE	; 254
 170:	98 b9       	out	0x08, r25	; 8
 172:	ef e3       	ldi	r30, 0x3F	; 63
 174:	fc e9       	ldi	r31, 0x9C	; 156
 176:	31 97       	sbiw	r30, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <ENVIA_DATO+0x2c>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <ENVIA_DATO+0x32>
 17c:	00 00       	nop
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	88 0f       	add	r24, r24
 186:	99 1f       	adc	r25, r25
 188:	8c 73       	andi	r24, 0x3C	; 60
 18a:	88 b9       	out	0x08, r24	; 8
 18c:	88 b1       	in	r24, 0x08	; 8
 18e:	83 60       	ori	r24, 0x03	; 3
 190:	88 b9       	out	0x08, r24	; 8
 192:	8f e9       	ldi	r24, 0x9F	; 159
 194:	9f e0       	ldi	r25, 0x0F	; 15
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <ENVIA_DATO+0x4c>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <ENVIA_DATO+0x52>
 19c:	00 00       	nop
 19e:	88 b1       	in	r24, 0x08	; 8
 1a0:	8d 7f       	andi	r24, 0xFD	; 253
 1a2:	88 b9       	out	0x08, r24	; 8
 1a4:	88 b1       	in	r24, 0x08	; 8
 1a6:	8e 7f       	andi	r24, 0xFE	; 254
 1a8:	88 b9       	out	0x08, r24	; 8
 1aa:	ef e3       	ldi	r30, 0x3F	; 63
 1ac:	fc e9       	ldi	r31, 0x9C	; 156
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <ENVIA_DATO+0x64>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <ENVIA_DATO+0x6a>
 1b4:	00 00       	nop
 1b6:	08 95       	ret

000001b8 <ENVIA_CADENA>:
 1b8:	0f 93       	push	r16
 1ba:	1f 93       	push	r17
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	8c 01       	movw	r16, r24
 1c2:	c0 e0       	ldi	r28, 0x00	; 0
 1c4:	d0 e0       	ldi	r29, 0x00	; 0
 1c6:	03 c0       	rjmp	.+6      	; 0x1ce <ENVIA_CADENA+0x16>
 1c8:	0e 94 a5 00 	call	0x14a	; 0x14a <ENVIA_DATO>
 1cc:	21 96       	adiw	r28, 0x01	; 1
 1ce:	f8 01       	movw	r30, r16
 1d0:	ec 0f       	add	r30, r28
 1d2:	fd 1f       	adc	r31, r29
 1d4:	80 81       	ld	r24, Z
 1d6:	81 11       	cpse	r24, r1
 1d8:	f7 cf       	rjmp	.-18     	; 0x1c8 <ENVIA_CADENA+0x10>
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	1f 91       	pop	r17
 1e0:	0f 91       	pop	r16
 1e2:	08 95       	ret

000001e4 <LIMPIA_LCD>:
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	0e 94 53 00 	call	0xa6	; 0xa6 <ENVIA_CMD>
 1ea:	08 95       	ret

000001ec <PWM_init>:
 1ec:	9c 01       	movw	r18, r24
 1ee:	e0 e8       	ldi	r30, 0x80	; 128
 1f0:	f0 e0       	ldi	r31, 0x00	; 0
 1f2:	80 81       	ld	r24, Z
 1f4:	8e 7f       	andi	r24, 0xFE	; 254
 1f6:	80 83       	st	Z, r24
 1f8:	80 81       	ld	r24, Z
 1fa:	82 60       	ori	r24, 0x02	; 2
 1fc:	80 83       	st	Z, r24
 1fe:	e1 e8       	ldi	r30, 0x81	; 129
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	88 60       	ori	r24, 0x08	; 8
 206:	80 83       	st	Z, r24
 208:	80 81       	ld	r24, Z
 20a:	80 61       	ori	r24, 0x10	; 16
 20c:	80 83       	st	Z, r24
 20e:	84 b5       	in	r24, 0x24	; 36
 210:	81 60       	ori	r24, 0x01	; 1
 212:	84 bd       	out	0x24, r24	; 36
 214:	84 b5       	in	r24, 0x24	; 36
 216:	8d 7f       	andi	r24, 0xFD	; 253
 218:	84 bd       	out	0x24, r24	; 36
 21a:	85 b5       	in	r24, 0x25	; 37
 21c:	87 7f       	andi	r24, 0xF7	; 247
 21e:	85 bd       	out	0x25, r24	; 37
 220:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <__data_end+0x1>
 224:	20 93 16 01 	sts	0x0116, r18	; 0x800116 <__data_end>
 228:	03 2e       	mov	r0, r19
 22a:	00 0c       	add	r0, r0
 22c:	44 0b       	sbc	r20, r20
 22e:	55 0b       	sbc	r21, r21
 230:	69 e0       	ldi	r22, 0x09	; 9
 232:	7d e3       	ldi	r23, 0x3D	; 61
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 bf 02 	call	0x57e	; 0x57e <__udivmodsi4>
 23c:	21 50       	subi	r18, 0x01	; 1
 23e:	31 09       	sbc	r19, r1
 240:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 244:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 248:	08 95       	ret

0000024a <PWM_on>:
 24a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 24e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 252:	e1 e8       	ldi	r30, 0x81	; 129
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	81 60       	ori	r24, 0x01	; 1
 25a:	80 83       	st	Z, r24
 25c:	80 81       	ld	r24, Z
 25e:	8d 7f       	andi	r24, 0xFD	; 253
 260:	80 83       	st	Z, r24
 262:	80 81       	ld	r24, Z
 264:	84 60       	ori	r24, 0x04	; 4
 266:	80 83       	st	Z, r24
 268:	16 bc       	out	0x26, r1	; 38
 26a:	85 b5       	in	r24, 0x25	; 37
 26c:	81 60       	ori	r24, 0x01	; 1
 26e:	85 bd       	out	0x25, r24	; 37
 270:	85 b5       	in	r24, 0x25	; 37
 272:	8d 7f       	andi	r24, 0xFD	; 253
 274:	85 bd       	out	0x25, r24	; 37
 276:	85 b5       	in	r24, 0x25	; 37
 278:	84 60       	ori	r24, 0x04	; 4
 27a:	85 bd       	out	0x25, r24	; 37
 27c:	08 95       	ret

0000027e <PWM_setDutyA>:
}

void PWM_setDutyA(int duty)
{
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	ec 01       	movw	r28, r24
	//Pin configuration
	DDRB |= (1<<DDB1);
 284:	84 b1       	in	r24, 0x04	; 4
 286:	82 60       	ori	r24, 0x02	; 2
 288:	84 b9       	out	0x04, r24	; 4
	
	//Output active
	TCCR1A &=~ (1<<COM1A0);
 28a:	e0 e8       	ldi	r30, 0x80	; 128
 28c:	f0 e0       	ldi	r31, 0x00	; 0
 28e:	80 81       	ld	r24, Z
 290:	8f 7b       	andi	r24, 0xBF	; 191
 292:	80 83       	st	Z, r24
	TCCR1A |=  (1<<COM1A1);
 294:	80 81       	ld	r24, Z
 296:	80 68       	ori	r24, 0x80	; 128
 298:	80 83       	st	Z, r24

	OCR1A = (((F_CPU/1024/_freq) - 1)*duty)/100;
 29a:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__data_end>
 29e:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__data_end+0x1>
 2a2:	03 2e       	mov	r0, r19
 2a4:	00 0c       	add	r0, r0
 2a6:	44 0b       	sbc	r20, r20
 2a8:	55 0b       	sbc	r21, r21
 2aa:	69 e0       	ldi	r22, 0x09	; 9
 2ac:	7d e3       	ldi	r23, 0x3D	; 61
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	0e 94 bf 02 	call	0x57e	; 0x57e <__udivmodsi4>
 2b6:	21 50       	subi	r18, 0x01	; 1
 2b8:	31 09       	sbc	r19, r1
 2ba:	41 09       	sbc	r20, r1
 2bc:	51 09       	sbc	r21, r1
 2be:	de 01       	movw	r26, r28
 2c0:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__mulshisi3>
 2c4:	24 e6       	ldi	r18, 0x64	; 100
 2c6:	30 e0       	ldi	r19, 0x00	; 0
 2c8:	40 e0       	ldi	r20, 0x00	; 0
 2ca:	50 e0       	ldi	r21, 0x00	; 0
 2cc:	0e 94 bf 02 	call	0x57e	; 0x57e <__udivmodsi4>
 2d0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 2d4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
}
 2d8:	df 91       	pop	r29
 2da:	cf 91       	pop	r28
 2dc:	08 95       	ret

000002de <PWM_setDutyB>:

void PWM_setDutyB(int duty)
{
 2de:	cf 93       	push	r28
 2e0:	df 93       	push	r29
 2e2:	ec 01       	movw	r28, r24
	//Pin configuration
	DDRB |= (1<<DDB2);
 2e4:	84 b1       	in	r24, 0x04	; 4
 2e6:	84 60       	ori	r24, 0x04	; 4
 2e8:	84 b9       	out	0x04, r24	; 4

	//Output active
	TCCR1A &=~ (1<<COM1B0);
 2ea:	e0 e8       	ldi	r30, 0x80	; 128
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	80 81       	ld	r24, Z
 2f0:	8f 7e       	andi	r24, 0xEF	; 239
 2f2:	80 83       	st	Z, r24
	TCCR1A |=  (1<<COM1B1);
 2f4:	80 81       	ld	r24, Z
 2f6:	80 62       	ori	r24, 0x20	; 32
 2f8:	80 83       	st	Z, r24

	OCR1B = (((F_CPU/1024/_freq) - 1)*duty)/100;
 2fa:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__data_end>
 2fe:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__data_end+0x1>
 302:	03 2e       	mov	r0, r19
 304:	00 0c       	add	r0, r0
 306:	44 0b       	sbc	r20, r20
 308:	55 0b       	sbc	r21, r21
 30a:	69 e0       	ldi	r22, 0x09	; 9
 30c:	7d e3       	ldi	r23, 0x3D	; 61
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	90 e0       	ldi	r25, 0x00	; 0
 312:	0e 94 bf 02 	call	0x57e	; 0x57e <__udivmodsi4>
 316:	21 50       	subi	r18, 0x01	; 1
 318:	31 09       	sbc	r19, r1
 31a:	41 09       	sbc	r20, r1
 31c:	51 09       	sbc	r21, r1
 31e:	de 01       	movw	r26, r28
 320:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <__mulshisi3>
 324:	24 e6       	ldi	r18, 0x64	; 100
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	40 e0       	ldi	r20, 0x00	; 0
 32a:	50 e0       	ldi	r21, 0x00	; 0
 32c:	0e 94 bf 02 	call	0x57e	; 0x57e <__udivmodsi4>
 330:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 334:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
}
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	08 95       	ret

0000033e <PWM_setDutyC>:

void PWM_setDutyC(int duty)
{
	//Pin configuration
	DDRD |= (1<<DDD6);
 33e:	2a b1       	in	r18, 0x0a	; 10
 340:	20 64       	ori	r18, 0x40	; 64
 342:	2a b9       	out	0x0a, r18	; 10
	
	//Output active
	TCCR0A |= (0<<COM0B0);
 344:	24 b5       	in	r18, 0x24	; 36
 346:	24 bd       	out	0x24, r18	; 36
	TCCR0A |= (1<<COM0B1);
 348:	24 b5       	in	r18, 0x24	; 36
 34a:	20 62       	ori	r18, 0x20	; 32
 34c:	24 bd       	out	0x24, r18	; 36

	OCR0B = (255*duty)/100;
 34e:	2f ef       	ldi	r18, 0xFF	; 255
 350:	ac 01       	movw	r20, r24
 352:	24 9f       	mul	r18, r20
 354:	c0 01       	movw	r24, r0
 356:	25 9f       	mul	r18, r21
 358:	90 0d       	add	r25, r0
 35a:	11 24       	eor	r1, r1
 35c:	64 e6       	ldi	r22, 0x64	; 100
 35e:	70 e0       	ldi	r23, 0x00	; 0
 360:	0e 94 ab 02 	call	0x556	; 0x556 <__divmodhi4>
 364:	68 bd       	out	0x28, r22	; 40
 366:	08 95       	ret

00000368 <main>:
int x;
char str[16];

int main(void)
{
	DDRD  = 0xF0;						// ENTRADAS - INT0 Y 1
 368:	80 ef       	ldi	r24, 0xF0	; 240
 36a:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x0F;						// Pull up
 36c:	8f e0       	ldi	r24, 0x0F	; 15
 36e:	8b b9       	out	0x0b, r24	; 11
	DDRC  = 0xFF;						// LCD
 370:	8f ef       	ldi	r24, 0xFF	; 255
 372:	87 b9       	out	0x07, r24	; 7
	LCD_INICIALIZA();
 374:	0e 94 8a 00 	call	0x114	; 0x114 <LCD_INICIALIZA>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 378:	2f ef       	ldi	r18, 0xFF	; 255
 37a:	89 ef       	ldi	r24, 0xF9	; 249
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	21 50       	subi	r18, 0x01	; 1
 380:	80 40       	sbci	r24, 0x00	; 0
 382:	90 40       	sbci	r25, 0x00	; 0
 384:	e1 f7       	brne	.-8      	; 0x37e <main+0x16>
 386:	00 c0       	rjmp	.+0      	; 0x388 <main+0x20>
 388:	00 00       	nop
	_delay_ms(20);
	
	// Int interruptions
	cli();								// CLEAR INTERRUPTIONS
 38a:	f8 94       	cli
	
	PWM_init(100);
 38c:	84 e6       	ldi	r24, 0x64	; 100
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	0e 94 f6 00 	call	0x1ec	; 0x1ec <PWM_init>
	EICRA  |= (1<<ISC01)|(1<<ISC01); // INT0 -> Flanco de subida
 394:	e9 e6       	ldi	r30, 0x69	; 105
 396:	f0 e0       	ldi	r31, 0x00	; 0
 398:	80 81       	ld	r24, Z
 39a:	82 60       	ori	r24, 0x02	; 2
 39c:	80 83       	st	Z, r24
	EICRA  |= (1<<ISC11)|(1<<ISC10); // INT1 -> Flanco de subida
 39e:	80 81       	ld	r24, Z
 3a0:	8c 60       	ori	r24, 0x0C	; 12
 3a2:	80 83       	st	Z, r24
	EIMSK  |= (1<<INT0) |(1<<INT1);
 3a4:	8d b3       	in	r24, 0x1d	; 29
 3a6:	83 60       	ori	r24, 0x03	; 3
 3a8:	8d bb       	out	0x1d, r24	; 29
	
	sei();	
 3aa:	78 94       	sei
								// ENABLE INTERRUPTIONS
	x = 20;
 3ac:	84 e1       	ldi	r24, 0x14	; 20
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <x+0x1>
 3b4:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <x>
	PWM_setDutyA(20); //PWM MODO RAPIDO  TIMER1
 3b8:	0e 94 3f 01 	call	0x27e	; 0x27e <PWM_setDutyA>
	PWM_setDutyB(30); //PWM MODO RAPIDO  TIMER1
 3bc:	8e e1       	ldi	r24, 0x1E	; 30
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	0e 94 6f 01 	call	0x2de	; 0x2de <PWM_setDutyB>
	PWM_setDutyC(20); //PWM FASE CORRECTA TIMER0
 3c4:	84 e1       	ldi	r24, 0x14	; 20
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 9f 01 	call	0x33e	; 0x33e <PWM_setDutyC>
	PWM_on();
 3cc:	0e 94 25 01 	call	0x24a	; 0x24a <PWM_on>
 3d0:	ff cf       	rjmp	.-2      	; 0x3d0 <main+0x68>

000003d2 <PWM_SET_DUTY>:

	OCR0B = (255*duty)/100;
}

void PWM_SET_DUTY(int d)
{
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	ec 01       	movw	r28, r24
	OCR1B = (((F_CPU/1024/(100))-1)*d)/100;
 3d8:	2b e9       	ldi	r18, 0x9B	; 155
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	dc 01       	movw	r26, r24
 3de:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__usmulhisi3>
 3e2:	24 e6       	ldi	r18, 0x64	; 100
 3e4:	30 e0       	ldi	r19, 0x00	; 0
 3e6:	40 e0       	ldi	r20, 0x00	; 0
 3e8:	50 e0       	ldi	r21, 0x00	; 0
 3ea:	0e 94 bf 02 	call	0x57e	; 0x57e <__udivmodsi4>
 3ee:	30 93 8b 00 	sts	0x008B, r19	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 3f2:	20 93 8a 00 	sts	0x008A, r18	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	OCR0B = (d*255)/100;
 3f6:	2f ef       	ldi	r18, 0xFF	; 255
 3f8:	2c 9f       	mul	r18, r28
 3fa:	c0 01       	movw	r24, r0
 3fc:	2d 9f       	mul	r18, r29
 3fe:	90 0d       	add	r25, r0
 400:	11 24       	eor	r1, r1
 402:	64 e6       	ldi	r22, 0x64	; 100
 404:	70 e0       	ldi	r23, 0x00	; 0
 406:	0e 94 ab 02 	call	0x556	; 0x556 <__divmodhi4>
 40a:	68 bd       	out	0x28, r22	; 40
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <__vector_1>:
	}
}



ISR(INT0_vect){
 412:	1f 92       	push	r1
 414:	0f 92       	push	r0
 416:	0f b6       	in	r0, 0x3f	; 63
 418:	0f 92       	push	r0
 41a:	11 24       	eor	r1, r1
 41c:	2f 93       	push	r18
 41e:	3f 93       	push	r19
 420:	4f 93       	push	r20
 422:	5f 93       	push	r21
 424:	6f 93       	push	r22
 426:	7f 93       	push	r23
 428:	8f 93       	push	r24
 42a:	9f 93       	push	r25
 42c:	af 93       	push	r26
 42e:	bf 93       	push	r27
 430:	ef 93       	push	r30
 432:	ff 93       	push	r31
	// Add
	
	
	
	if ( (x+10) <= 100){
 434:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <x>
 438:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <x+0x1>
 43c:	0a 96       	adiw	r24, 0x0a	; 10
 43e:	85 36       	cpi	r24, 0x65	; 101
 440:	91 05       	cpc	r25, r1
 442:	34 f4       	brge	.+12     	; 0x450 <__vector_1+0x3e>
		
		x = x+10;
 444:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <x+0x1>
 448:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <x>
		PWM_SET_DUTY(x);
 44c:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <PWM_SET_DUTY>
	}
	
	a = x;
 450:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <x>
 454:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <x+0x1>
 458:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <a+0x1>
 45c:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <a>
	
	itoa(a, str, 10);
 460:	4a e0       	ldi	r20, 0x0A	; 10
 462:	50 e0       	ldi	r21, 0x00	; 0
 464:	6a e1       	ldi	r22, 0x1A	; 26
 466:	71 e0       	ldi	r23, 0x01	; 1
 468:	0e 94 1e 03 	call	0x63c	; 0x63c <itoa>
	
	ENVIA_CADENA(str);
 46c:	8a e1       	ldi	r24, 0x1A	; 26
 46e:	91 e0       	ldi	r25, 0x01	; 1
 470:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
	ENVIA_CADENA(" % duty +");
 474:	80 e0       	ldi	r24, 0x00	; 0
 476:	91 e0       	ldi	r25, 0x01	; 1
 478:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
 47c:	2f ef       	ldi	r18, 0xFF	; 255
 47e:	83 ed       	ldi	r24, 0xD3	; 211
 480:	90 e3       	ldi	r25, 0x30	; 48
 482:	21 50       	subi	r18, 0x01	; 1
 484:	80 40       	sbci	r24, 0x00	; 0
 486:	90 40       	sbci	r25, 0x00	; 0
 488:	e1 f7       	brne	.-8      	; 0x482 <__vector_1+0x70>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <__vector_1+0x7a>
 48c:	00 00       	nop
	_delay_ms(1000);
	LIMPIA_LCD();
 48e:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>
	
	
};
 492:	ff 91       	pop	r31
 494:	ef 91       	pop	r30
 496:	bf 91       	pop	r27
 498:	af 91       	pop	r26
 49a:	9f 91       	pop	r25
 49c:	8f 91       	pop	r24
 49e:	7f 91       	pop	r23
 4a0:	6f 91       	pop	r22
 4a2:	5f 91       	pop	r21
 4a4:	4f 91       	pop	r20
 4a6:	3f 91       	pop	r19
 4a8:	2f 91       	pop	r18
 4aa:	0f 90       	pop	r0
 4ac:	0f be       	out	0x3f, r0	; 63
 4ae:	0f 90       	pop	r0
 4b0:	1f 90       	pop	r1
 4b2:	18 95       	reti

000004b4 <__vector_2>:


ISR(INT1_vect){
 4b4:	1f 92       	push	r1
 4b6:	0f 92       	push	r0
 4b8:	0f b6       	in	r0, 0x3f	; 63
 4ba:	0f 92       	push	r0
 4bc:	11 24       	eor	r1, r1
 4be:	2f 93       	push	r18
 4c0:	3f 93       	push	r19
 4c2:	4f 93       	push	r20
 4c4:	5f 93       	push	r21
 4c6:	6f 93       	push	r22
 4c8:	7f 93       	push	r23
 4ca:	8f 93       	push	r24
 4cc:	9f 93       	push	r25
 4ce:	af 93       	push	r26
 4d0:	bf 93       	push	r27
 4d2:	ef 93       	push	r30
 4d4:	ff 93       	push	r31
	// Add
		
	
	if (x > 10){
 4d6:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <x>
 4da:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <x+0x1>
 4de:	8b 30       	cpi	r24, 0x0B	; 11
 4e0:	91 05       	cpc	r25, r1
 4e2:	3c f0       	brlt	.+14     	; 0x4f2 <__vector_2+0x3e>
		x = x-10;	
 4e4:	0a 97       	sbiw	r24, 0x0a	; 10
 4e6:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <x+0x1>
 4ea:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <x>
		PWM_SET_DUTY(x); 
 4ee:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <PWM_SET_DUTY>
	}
	
	a = x;
 4f2:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <x>
 4f6:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <x+0x1>
 4fa:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <a+0x1>
 4fe:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <a>
	itoa(a, str, 10);
 502:	4a e0       	ldi	r20, 0x0A	; 10
 504:	50 e0       	ldi	r21, 0x00	; 0
 506:	6a e1       	ldi	r22, 0x1A	; 26
 508:	71 e0       	ldi	r23, 0x01	; 1
 50a:	0e 94 1e 03 	call	0x63c	; 0x63c <itoa>
	ENVIA_CADENA(str);
 50e:	8a e1       	ldi	r24, 0x1A	; 26
 510:	91 e0       	ldi	r25, 0x01	; 1
 512:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
	ENVIA_CADENA("  % duty -");
 516:	8a e0       	ldi	r24, 0x0A	; 10
 518:	91 e0       	ldi	r25, 0x01	; 1
 51a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <ENVIA_CADENA>
 51e:	2f ef       	ldi	r18, 0xFF	; 255
 520:	83 ed       	ldi	r24, 0xD3	; 211
 522:	90 e3       	ldi	r25, 0x30	; 48
 524:	21 50       	subi	r18, 0x01	; 1
 526:	80 40       	sbci	r24, 0x00	; 0
 528:	90 40       	sbci	r25, 0x00	; 0
 52a:	e1 f7       	brne	.-8      	; 0x524 <__vector_2+0x70>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <__vector_2+0x7a>
 52e:	00 00       	nop
	_delay_ms(1000);
	LIMPIA_LCD();
 530:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <LIMPIA_LCD>

};
 534:	ff 91       	pop	r31
 536:	ef 91       	pop	r30
 538:	bf 91       	pop	r27
 53a:	af 91       	pop	r26
 53c:	9f 91       	pop	r25
 53e:	8f 91       	pop	r24
 540:	7f 91       	pop	r23
 542:	6f 91       	pop	r22
 544:	5f 91       	pop	r21
 546:	4f 91       	pop	r20
 548:	3f 91       	pop	r19
 54a:	2f 91       	pop	r18
 54c:	0f 90       	pop	r0
 54e:	0f be       	out	0x3f, r0	; 63
 550:	0f 90       	pop	r0
 552:	1f 90       	pop	r1
 554:	18 95       	reti

00000556 <__divmodhi4>:
 556:	97 fb       	bst	r25, 7
 558:	07 2e       	mov	r0, r23
 55a:	16 f4       	brtc	.+4      	; 0x560 <__divmodhi4+0xa>
 55c:	00 94       	com	r0
 55e:	07 d0       	rcall	.+14     	; 0x56e <__divmodhi4_neg1>
 560:	77 fd       	sbrc	r23, 7
 562:	09 d0       	rcall	.+18     	; 0x576 <__divmodhi4_neg2>
 564:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <__udivmodhi4>
 568:	07 fc       	sbrc	r0, 7
 56a:	05 d0       	rcall	.+10     	; 0x576 <__divmodhi4_neg2>
 56c:	3e f4       	brtc	.+14     	; 0x57c <__divmodhi4_exit>

0000056e <__divmodhi4_neg1>:
 56e:	90 95       	com	r25
 570:	81 95       	neg	r24
 572:	9f 4f       	sbci	r25, 0xFF	; 255
 574:	08 95       	ret

00000576 <__divmodhi4_neg2>:
 576:	70 95       	com	r23
 578:	61 95       	neg	r22
 57a:	7f 4f       	sbci	r23, 0xFF	; 255

0000057c <__divmodhi4_exit>:
 57c:	08 95       	ret

0000057e <__udivmodsi4>:
 57e:	a1 e2       	ldi	r26, 0x21	; 33
 580:	1a 2e       	mov	r1, r26
 582:	aa 1b       	sub	r26, r26
 584:	bb 1b       	sub	r27, r27
 586:	fd 01       	movw	r30, r26
 588:	0d c0       	rjmp	.+26     	; 0x5a4 <__udivmodsi4_ep>

0000058a <__udivmodsi4_loop>:
 58a:	aa 1f       	adc	r26, r26
 58c:	bb 1f       	adc	r27, r27
 58e:	ee 1f       	adc	r30, r30
 590:	ff 1f       	adc	r31, r31
 592:	a2 17       	cp	r26, r18
 594:	b3 07       	cpc	r27, r19
 596:	e4 07       	cpc	r30, r20
 598:	f5 07       	cpc	r31, r21
 59a:	20 f0       	brcs	.+8      	; 0x5a4 <__udivmodsi4_ep>
 59c:	a2 1b       	sub	r26, r18
 59e:	b3 0b       	sbc	r27, r19
 5a0:	e4 0b       	sbc	r30, r20
 5a2:	f5 0b       	sbc	r31, r21

000005a4 <__udivmodsi4_ep>:
 5a4:	66 1f       	adc	r22, r22
 5a6:	77 1f       	adc	r23, r23
 5a8:	88 1f       	adc	r24, r24
 5aa:	99 1f       	adc	r25, r25
 5ac:	1a 94       	dec	r1
 5ae:	69 f7       	brne	.-38     	; 0x58a <__udivmodsi4_loop>
 5b0:	60 95       	com	r22
 5b2:	70 95       	com	r23
 5b4:	80 95       	com	r24
 5b6:	90 95       	com	r25
 5b8:	9b 01       	movw	r18, r22
 5ba:	ac 01       	movw	r20, r24
 5bc:	bd 01       	movw	r22, r26
 5be:	cf 01       	movw	r24, r30
 5c0:	08 95       	ret

000005c2 <__usmulhisi3>:
 5c2:	0e 94 04 03 	call	0x608	; 0x608 <__umulhisi3>

000005c6 <__usmulhisi3_tail>:
 5c6:	b7 ff       	sbrs	r27, 7
 5c8:	08 95       	ret
 5ca:	82 1b       	sub	r24, r18
 5cc:	93 0b       	sbc	r25, r19
 5ce:	08 95       	ret

000005d0 <__mulshisi3>:
 5d0:	b7 ff       	sbrs	r27, 7
 5d2:	0c 94 13 03 	jmp	0x626	; 0x626 <__muluhisi3>

000005d6 <__mulohisi3>:
 5d6:	0e 94 13 03 	call	0x626	; 0x626 <__muluhisi3>
 5da:	82 1b       	sub	r24, r18
 5dc:	93 0b       	sbc	r25, r19
 5de:	08 95       	ret

000005e0 <__udivmodhi4>:
 5e0:	aa 1b       	sub	r26, r26
 5e2:	bb 1b       	sub	r27, r27
 5e4:	51 e1       	ldi	r21, 0x11	; 17
 5e6:	07 c0       	rjmp	.+14     	; 0x5f6 <__udivmodhi4_ep>

000005e8 <__udivmodhi4_loop>:
 5e8:	aa 1f       	adc	r26, r26
 5ea:	bb 1f       	adc	r27, r27
 5ec:	a6 17       	cp	r26, r22
 5ee:	b7 07       	cpc	r27, r23
 5f0:	10 f0       	brcs	.+4      	; 0x5f6 <__udivmodhi4_ep>
 5f2:	a6 1b       	sub	r26, r22
 5f4:	b7 0b       	sbc	r27, r23

000005f6 <__udivmodhi4_ep>:
 5f6:	88 1f       	adc	r24, r24
 5f8:	99 1f       	adc	r25, r25
 5fa:	5a 95       	dec	r21
 5fc:	a9 f7       	brne	.-22     	; 0x5e8 <__udivmodhi4_loop>
 5fe:	80 95       	com	r24
 600:	90 95       	com	r25
 602:	bc 01       	movw	r22, r24
 604:	cd 01       	movw	r24, r26
 606:	08 95       	ret

00000608 <__umulhisi3>:
 608:	a2 9f       	mul	r26, r18
 60a:	b0 01       	movw	r22, r0
 60c:	b3 9f       	mul	r27, r19
 60e:	c0 01       	movw	r24, r0
 610:	a3 9f       	mul	r26, r19
 612:	70 0d       	add	r23, r0
 614:	81 1d       	adc	r24, r1
 616:	11 24       	eor	r1, r1
 618:	91 1d       	adc	r25, r1
 61a:	b2 9f       	mul	r27, r18
 61c:	70 0d       	add	r23, r0
 61e:	81 1d       	adc	r24, r1
 620:	11 24       	eor	r1, r1
 622:	91 1d       	adc	r25, r1
 624:	08 95       	ret

00000626 <__muluhisi3>:
 626:	0e 94 04 03 	call	0x608	; 0x608 <__umulhisi3>
 62a:	a5 9f       	mul	r26, r21
 62c:	90 0d       	add	r25, r0
 62e:	b4 9f       	mul	r27, r20
 630:	90 0d       	add	r25, r0
 632:	a4 9f       	mul	r26, r20
 634:	80 0d       	add	r24, r0
 636:	91 1d       	adc	r25, r1
 638:	11 24       	eor	r1, r1
 63a:	08 95       	ret

0000063c <itoa>:
 63c:	45 32       	cpi	r20, 0x25	; 37
 63e:	51 05       	cpc	r21, r1
 640:	20 f4       	brcc	.+8      	; 0x64a <itoa+0xe>
 642:	42 30       	cpi	r20, 0x02	; 2
 644:	10 f0       	brcs	.+4      	; 0x64a <itoa+0xe>
 646:	0c 94 29 03 	jmp	0x652	; 0x652 <__itoa_ncheck>
 64a:	fb 01       	movw	r30, r22
 64c:	10 82       	st	Z, r1
 64e:	cb 01       	movw	r24, r22
 650:	08 95       	ret

00000652 <__itoa_ncheck>:
 652:	bb 27       	eor	r27, r27
 654:	4a 30       	cpi	r20, 0x0A	; 10
 656:	31 f4       	brne	.+12     	; 0x664 <__itoa_ncheck+0x12>
 658:	99 23       	and	r25, r25
 65a:	22 f4       	brpl	.+8      	; 0x664 <__itoa_ncheck+0x12>
 65c:	bd e2       	ldi	r27, 0x2D	; 45
 65e:	90 95       	com	r25
 660:	81 95       	neg	r24
 662:	9f 4f       	sbci	r25, 0xFF	; 255
 664:	0c 94 35 03 	jmp	0x66a	; 0x66a <__utoa_common>

00000668 <__utoa_ncheck>:
 668:	bb 27       	eor	r27, r27

0000066a <__utoa_common>:
 66a:	fb 01       	movw	r30, r22
 66c:	55 27       	eor	r21, r21
 66e:	aa 27       	eor	r26, r26
 670:	88 0f       	add	r24, r24
 672:	99 1f       	adc	r25, r25
 674:	aa 1f       	adc	r26, r26
 676:	a4 17       	cp	r26, r20
 678:	10 f0       	brcs	.+4      	; 0x67e <__utoa_common+0x14>
 67a:	a4 1b       	sub	r26, r20
 67c:	83 95       	inc	r24
 67e:	50 51       	subi	r21, 0x10	; 16
 680:	b9 f7       	brne	.-18     	; 0x670 <__utoa_common+0x6>
 682:	a0 5d       	subi	r26, 0xD0	; 208
 684:	aa 33       	cpi	r26, 0x3A	; 58
 686:	08 f0       	brcs	.+2      	; 0x68a <__utoa_common+0x20>
 688:	a9 5d       	subi	r26, 0xD9	; 217
 68a:	a1 93       	st	Z+, r26
 68c:	00 97       	sbiw	r24, 0x00	; 0
 68e:	79 f7       	brne	.-34     	; 0x66e <__utoa_common+0x4>
 690:	b1 11       	cpse	r27, r1
 692:	b1 93       	st	Z+, r27
 694:	11 92       	st	Z+, r1
 696:	cb 01       	movw	r24, r22
 698:	0c 94 4e 03 	jmp	0x69c	; 0x69c <strrev>

0000069c <strrev>:
 69c:	dc 01       	movw	r26, r24
 69e:	fc 01       	movw	r30, r24
 6a0:	67 2f       	mov	r22, r23
 6a2:	71 91       	ld	r23, Z+
 6a4:	77 23       	and	r23, r23
 6a6:	e1 f7       	brne	.-8      	; 0x6a0 <strrev+0x4>
 6a8:	32 97       	sbiw	r30, 0x02	; 2
 6aa:	04 c0       	rjmp	.+8      	; 0x6b4 <strrev+0x18>
 6ac:	7c 91       	ld	r23, X
 6ae:	6d 93       	st	X+, r22
 6b0:	70 83       	st	Z, r23
 6b2:	62 91       	ld	r22, -Z
 6b4:	ae 17       	cp	r26, r30
 6b6:	bf 07       	cpc	r27, r31
 6b8:	c8 f3       	brcs	.-14     	; 0x6ac <strrev+0x10>
 6ba:	08 95       	ret

000006bc <_exit>:
 6bc:	f8 94       	cli

000006be <__stop_program>:
 6be:	ff cf       	rjmp	.-2      	; 0x6be <__stop_program>
